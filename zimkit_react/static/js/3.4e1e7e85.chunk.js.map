{"version":3,"sources":["ZIMKit/src/components/ZIMAdapter/base.js","ZIMKit/src/components/ZIMAdapter/web.js"],"names":["ZIMBase","Object","createClass","classCallCheck","this","ZIMWeb","_ZIMBase","inherits","_super","_createSuper","apply","arguments","key","value","type","listener","instance","on","off","userInfo","token","login","logout","destroy","renewToken","config","queryConversationList","groupInfo","userIDs","createGroup","message","toUserID","sendPeerMessage","toGroupID","sendGroupMessage","conversationID","conversationType","queryHistoryMessage","deleteConversation","clearConversationUnreadMessageCount","groupID","queryGroupInfo","queryGroupMemberList","joinGroup","leaveGroup","appID","ZIM","create"],"mappings":"gJAAaA,EAAbC,OAAAC,EAAA,EAAAD,CAAA,SAAAD,IAAAC,OAAAE,EAAA,EAAAF,CAAAG,KAAAJ,+eCEO,IAAMK,EAAb,SAAAC,GAAAL,OAAAM,EAAA,EAAAN,CAAAI,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GAAA,SAAAA,IAAA,OAAAJ,OAAAE,EAAA,EAAAF,CAAAG,KAAAC,GAAAG,EAAAE,MAAAN,KAAAO,WAAA,OAAAV,OAAAC,EAAA,EAAAD,CAAAI,EAAA,EAAAO,IAAA,KAAAC,MAUI,SAAGC,EAAMC,GACL,OAAOV,EAAOW,SAASC,GAAGH,EAAMC,KAXxC,CAAAH,IAAA,MAAAC,MAaI,SAAIC,GACA,OAAOT,EAAOW,SAASE,IAAIJ,KAdnC,CAAAF,IAAA,QAAAC,MAgBI,SAAMM,EAAUC,GACZ,OAAOf,EAAOW,SAASK,MAAMF,EAAUC,KAjB/C,CAAAR,IAAA,SAAAC,MAmBI,WACI,OAAOR,EAAOW,SAASM,WApB/B,CAAAV,IAAA,UAAAC,MAsBI,WACI,OAAOR,EAAOW,SAASO,YAvB/B,CAAAX,IAAA,aAAAC,MAyBI,SAAWO,GACP,OAAOf,EAAOW,SAASQ,WAAWJ,KA1B1C,CAAAR,IAAA,wBAAAC,MA4BI,SAAsBY,GAClB,OAAOpB,EAAOW,SAASU,sBAAsBD,KA7BrD,CAAAb,IAAA,cAAAC,MA+BI,SAAYc,EAAWC,EAASH,GAC5B,OAAOpB,EAAOW,SAASa,YAAYF,EAAWC,EAASH,KAhC/D,CAAAb,IAAA,kBAAAC,MAkCI,SAAgBiB,EAASC,EAAUN,GAC/B,OAAOpB,EAAOW,SAASgB,gBAAgBF,EAASC,EAAUN,KAnClE,CAAAb,IAAA,mBAAAC,MAqCI,SAAiBiB,EAASG,EAAWR,GACjC,OAAOpB,EAAOW,SAASkB,iBAAiBJ,EAASG,EAAWR,KAtCpE,CAAAb,IAAA,sBAAAC,MAwCI,SAAoBsB,EAAgBC,EAAkBX,GAClD,OAAOpB,EAAOW,SAASqB,oBAAoBF,EAAgBC,EAAkBX,KAzCrF,CAAAb,IAAA,qBAAAC,MA2CI,SAAmBsB,EAAgBC,EAAkBX,GACjD,OAAOpB,EAAOW,SAASsB,mBAAmBH,EAAgBC,EAAkBX,KA5CpF,CAAAb,IAAA,sCAAAC,MA8CI,SAAoCsB,EAAgBC,GAChD,OAAO/B,EAAOW,SAASuB,oCAAoCJ,EAAgBC,KA/CnF,CAAAxB,IAAA,iBAAAC,MAiDI,SAAe2B,GACX,OAAOnC,EAAOW,SAASyB,eAAeD,KAlD9C,CAAA5B,IAAA,uBAAAC,MAoDI,SAAqB2B,EAASf,GAC1B,OAAOpB,EAAOW,SAAS0B,qBAAqBF,EAASf,KArD7D,CAAAb,IAAA,YAAAC,MAuDI,SAAU2B,GACN,OAAOnC,EAAOW,SAAS2B,UAAUH,KAxDzC,CAAA5B,IAAA,aAAAC,MA0DI,SAAW2B,GACP,OAAOnC,EAAOW,SAAS4B,WAAWJ,MA3D1C,EAAA5B,IAAA,SAAAC,MACI,SAAcgC,GAIV,OAHKxC,EAAOW,WACRX,EAAOW,SAAW8B,IAAIC,OAAOF,IAE1BxC,EAAOW,WALtB,CAAAJ,IAAA,cAAAC,MAOI,WACI,OAAOR,EAAOW,aARtBX,EAAA,CAA4BL","file":"static/js/3.4e1e7e85.chunk.js","sourcesContent":["export class ZIMBase {\n}\n","import { ZIM } from './index.entity';\nimport { ZIMBase } from './base';\nexport class ZIMWeb extends ZIMBase {\n    static create(appID) {\n        if (!ZIMWeb.instance) {\n            ZIMWeb.instance = ZIM.create(appID);\n        }\n        return ZIMWeb.instance;\n    }\n    static getInstance() {\n        return ZIMWeb.instance;\n    }\n    on(type, listener) {\n        return ZIMWeb.instance.on(type, listener);\n    }\n    off(type) {\n        return ZIMWeb.instance.off(type);\n    }\n    login(userInfo, token) {\n        return ZIMWeb.instance.login(userInfo, token);\n    }\n    logout() {\n        return ZIMWeb.instance.logout();\n    }\n    destroy() {\n        return ZIMWeb.instance.destroy();\n    }\n    renewToken(token) {\n        return ZIMWeb.instance.renewToken(token);\n    }\n    queryConversationList(config) {\n        return ZIMWeb.instance.queryConversationList(config);\n    }\n    createGroup(groupInfo, userIDs, config) {\n        return ZIMWeb.instance.createGroup(groupInfo, userIDs, config);\n    }\n    sendPeerMessage(message, toUserID, config) {\n        return ZIMWeb.instance.sendPeerMessage(message, toUserID, config);\n    }\n    sendGroupMessage(message, toGroupID, config) {\n        return ZIMWeb.instance.sendGroupMessage(message, toGroupID, config);\n    }\n    queryHistoryMessage(conversationID, conversationType, config) {\n        return ZIMWeb.instance.queryHistoryMessage(conversationID, conversationType, config);\n    }\n    deleteConversation(conversationID, conversationType, config) {\n        return ZIMWeb.instance.deleteConversation(conversationID, conversationType, config);\n    }\n    clearConversationUnreadMessageCount(conversationID, conversationType) {\n        return ZIMWeb.instance.clearConversationUnreadMessageCount(conversationID, conversationType);\n    }\n    queryGroupInfo(groupID) {\n        return ZIMWeb.instance.queryGroupInfo(groupID);\n    }\n    queryGroupMemberList(groupID, config) {\n        return ZIMWeb.instance.queryGroupMemberList(groupID, config);\n    }\n    joinGroup(groupID) {\n        return ZIMWeb.instance.joinGroup(groupID);\n    }\n    leaveGroup(groupID) {\n        return ZIMWeb.instance.leaveGroup(groupID);\n    }\n}\n"],"sourceRoot":""}