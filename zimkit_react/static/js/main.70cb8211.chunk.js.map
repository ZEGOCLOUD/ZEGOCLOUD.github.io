{"version":3,"sources":["store/authSlice.js","store/index.js","util/name.js","util/index.js","util/token.js","config.js","ZIMKit/src/components/ZIMKitCommon/Constant/event.js","ZIMKit/src/components/ZIMAdapter/platform.js","ZIMKit/src/components/ZIMAdapter/index.js","ZIMKit/src/components/ZIMKitCommon/VM/ZIMKitEventHandler.js","ZIMKit/src/locales/zh.js","ZIMKit/src/locales/en.js","ZIMKit/src/plugin/i18n/index.js","ZIMKit/src/components/ZIMKitCommon/VM/ZIMKitManager.js","pages/Login/index.jsx","ZIMKit/src/components/ZIMKitConversation/Model/index.js","ZIMKit/src/components/ZIMKitConversation/VM/ZIMKitConversation.js","ZIMKit/src/components/ZIMKitGroup/VM/ZIMKitGroupVM.js","ZIMKit/src/components/ZIMKitCommon/UI/components/CreateChatDialog/index.jsx","ZIMKit/src/components/ZIMKitCommon/UI/components/RightClickDialog/index.jsx","ZIMKit/src/components/ZIMKitCommon/ToolUtil/dateFormat.js","ZIMKit/src/components/ZIMKitCommon/ToolUtil/eventBus.js","ZIMKit/src/components/ZIMKitConversation/UI/index.jsx","ZIMKit/src/components/ZIMKitMessage/Model/index.js","ZIMKit/src/components/ZIMKitMessage/VM/ZIMKitMessageVM.js","ZIMKit/src/components/ZIMKitMessage/UI/index.jsx","ZIMKit/src/components/ZIMKitGroup/UI/index.jsx","ZIMKit/src/components/ZIMKitCommon/UI/components/Toast/index.jsx","ZIMKit/src/components/ZIMKitCommon/UI/components/BaseDialog/index.jsx","ZIMKit/src/components/ZIMKitCommon/UI/index.jsx","pages/Main/index.jsx","pages/App/index.jsx","reportWebVitals.js","index.jsx","ZIMKit/src/components/ZIMAdapter/index.entity.js"],"names":["authSlice","createSlice","name","initialState","isInit","isLoggedIn","reducers","initIMKitSDK","state","action","payload","login","logout","actions","selectIsLoggedIn","store","configureStore","reducer","useSelector","util_name","getCacheUserInfo","localStorage","userInfo","JSON","parse","getUserName","value","cacheUserList","userList","randomName","nameArr","Math","floor","random","length","result","userName","verify","some","item","userID","filter","generateToken","seconds","appConfig","console","log","time","Date","now","body","app_id","appID","user_id","nonce","ctime","expire","key","CryptoJS","enc","Utf8","serverSecret","iv","toString","substring","ciphertext","AES","encrypt","stringify","ciphert","Uint8Array","from","Array","atob","map","val","charCodeAt","len_ciphert","uint8","set","Int32Array","buffer","reverse","token","concat","btoa","String","fromCharCode","apply","Object","toConsumableArray","EventName","src_config","ZIMPlatformManage","createClass","platform","classCallCheck","this","process","PLATFORM","ZIMAdapter","type","listener","getInstance","on","off","destroy","renewToken","config","queryConversationList","groupInfo","userIDs","createGroup","message","toUserID","sendPeerMessage","toGroupID","sendGroupMessage","conversationID","conversationType","queryHistoryMessage","deleteConversation","clearConversationUnreadMessageCount","groupID","queryGroupInfo","queryGroupMemberList","joinGroup","leaveGroup","zimPlatformManage","ZIMPlatform","Web","__webpack_require__","e","then","bind","zimAdapter","zimModule","ZIMWeb","Promise","resolve","create","ZIMKitEventHandler","_this$eventList","eventList","defineProperty","zimError","zimConnectionStateChanged","zimTokenWillExpire","zimReceivePeerMessage","zimReceiveGroupMessage","zimConversationTotalUnreadMessageCountUpdated","zimConversationChanged","zimKitIsLoggedIn","zimKitLoginUserUpdate","zimKitDeleteConversation","zimKitConversationListUpdate","zimKitCurrentConversationUpdate","zimKitConversationListQueryAbnormally","zimKitCreateGroup","zimKitCurrentChatUpdated","zimKitCurrentMessageListUpdated","zimKitCurrentGroupInfoUpdated","instance","event","callBackList","_this","isArray","forEach","callBack","includes","push","li","splice","indexOf","_len","arguments","args","_key","func","zh","common_yesterday","common_user_kick_out","common_monday","common_tuesday","common_wednesday","common_thursday","common_friday","common_saturday","common_sunday","common_logout","common_return","conversation_start_chat_w","conversation_empty","conversation_start_single_chat","conversation_start_group_chat","conversation_join_group_chat","conversation_cancel","conversation_delete","conversation_message_total_count","conversation_reload","conversation_enter_touserid_w","conversation_close_chat_w","demo_login_hint","demo_login","demo_user_name","demo_user_name_w","demo_welcome","demo_input_user_id_error_tips","demo_input_placeholder_w","demo_user_id_login","group_create_chat","group_input_group_id","group_input_group_id_w","group_input_group_name","group_input_user_id_of_group","group_input_user_id_of_group_w","group_user_id_cant_null","group_create_group_chat_title","group_join_group_chat","group_user_not_exit","group_group_not_exit","group_group_user_id_not_exit","group_group_user_id_not_exit_w","group_group_id_not_exit","group_group_id_not_exit_w","group_input_user_id_error_tip","group_group_id","group_copy","group_copy_success","message_input_new_message","message_user_not_exit_please_again","message_user_not_exit_please_again_w_1","message_user_not_exit_please_again_w_2","message_cant_send_empty_msg","message_create_chat","message_input_user_id_error_tips","message_create_single_chat","message_send_w","message_empty_w","en","ZIMKiti18n","localesData","i18next","i18n","use","initReactI18next","options","resources","translation","fallbackLng","navigator","language","detection","caches","init","assign","cn","ZIMKitManager","eventHandler","initPlatform","zim","onEvent","window","manager","_this2","actionListener","offEvent","callback","addEventListener","_this3","errorInfo","data","getI18next","LoginPage","props","_super","call","assertThisInitialized","loginFun","setState","objectSpread","target","loginWithUserInfo","setItem","setCacheUserInfo","find","addCacheUserToList","catch","error","_react_18_2_0_react_default","a","createElement","id","_react_router_6_3_0_react_router","to","replace","className","t","placeholder","onInput","style","display","onClick","disabled","React","Component","connect","dispatch","content","ZIMKitConversationModel","conversation","conversationName","unreadMessageCount","lastMessage","orderKey","notificationStatus","ZIMKitConversationVM","pagePullCount","conversationList","totalUnreadMessageCount","isAbnormal","activeCvID","loadStatus","initListenerHandle","updateListFlag","updateCurrentFlag","infoList","info","isExist","len","insetConversationList","sortCvListHandle","currentConversation","getConversationByID","nextConversation","undefined","count","reject","warn","firstConversation","_this4","isAlsoDeleteServerConversation","index","insetConversation","sort","b","ZIMKitGroupVM","memberList","currentGroupInfo","baseInfo","groupName","userIDList","nextFlag","TabItem","changeNav","onNavChange","actived","text","TabList","_super2","tabList","element","handleNavChange","current","tabListView","CreateChatDialog_TabItem","TableContent","_super3","peerErrTip","peerDisabled","groupErrTip","groupDisabled","closeDialog","createPeerChat","createGroupChat","handleUserIDInputChange","handleGroupUserIDInputChange","handleGroupIDInputChange","handleGroupNameInputChange","onCloseDialog","onCreatePeerChat","onCreateGroupChat","onJoinGroup","arr","split","flag","tableContentView","errTipView","_this$state","currentActived","maxLength","CreateChatDialog","_this5","_super4","handleCloseDialog","handleJoinGroup","handleCreatePeerChat","handleCreateGroupChat","CreateChatDialog_TabList","CreateChatDialog_TableContent","RightClickDialog","closeConversation","handleClick","path","Error","removeEventListener","onDeleteConversation","onCloseConversation","top","y","left","x","dateFormat","date","newDate","today","toDateString","dayList","1","2","3","4","5","6","0","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","getSeconds","getTime","getDay","EmitName","eventEmit","EventEmitter","groupInfoOperation","showGroupInfo","emit","GroupInfoOperation","toastOperation","showToast","toastData","ToastOperation","dialogOperation","showBaseDialog","dialogData","DialogOperation","ZIMKitMessageType","ConversationItem","switchConversation","operationConversation","setCurrentConversation","preventDefault","con","document","querySelector","onRightClick","showRightClickDialog","clientX","offsetLeft","clientY","offsetTop","conversationItem","slice","toLowerCase","unreadCountView","onContextMenu","nameFormat","timestamp","sentStatus","ConversationList","showCreateChatDialog","listScroll","triggerDialog","handleRightClick","handleDeleteConversation","handleCloseConversation","loadConversationList","registerIsLoggedInCallback","registerCvTotalUnreadMessageCountUpdatedCallback","registerCvListUpdatedCallback","registerCurrentCvUpdatedCallback","registerAbnormalCallback","unInit","msgElement","scrollTop","round","scrollHeight","clientHeight","loadNextPage","show","setTempConversation","userIDListArr","errorUserList","errorUserIDList","join","desc","cancelText","hasCloseBtn","code","_this6","_this$state$conversat","finally","_this7","totalView","createChatDialogView","rightClickDialogView","conversationListView","components_CreateChatDialog","components_RightClickDialog","UI_ConversationItem","onScroll","ZIMKitMessageModel","messageID","senderUserID","direction","conversationSeq","ZIMKitMessageVM","messageCount","messageIndex","currentChat","currentMessageList","fromConversationID","messageList","nextMessage","timeEnd","priority","res","msg","tipMsg","MessageView","oldScrollHeight","newScrollHeight","sendMessage","handleInputChange","getGroupUserName","scrollToBottom","triggerGroupInfo","registerLoginUserUpdatedCallback","registerCurrentChatUpdatedCallback","messageInput","focus","registerMessageListUpdatedCallback","Number","messageObj","groupIDUserName","member","currentMessage","currentIndex","previousMessage","_this$state2","_ZIMKitManager$getIns","chatContentView","Fragment","isReceive","isError","groupUserName","substr","GroupInfoView","copy","registerCurrentGroupInfoUpdateCallback","clipboard","writeText","groupInfoView","Toast","duration","clearTimeout","toastTimer","setTimeout","eventBus","toastView","_this$props$toastData","BaseDialog","closeHandle","cancelHandle","confirmHandle","cancelFunc","confirmFunc","dialogView","_this$props$dialogDat","title","confirmText","Common","handleGroupInfoOperation","handleToastOperation","handleDialogOperation","UI","ZIMKitMessage_UI","ZIMKitGroup_UI","components_Toast","components_BaseDialog","MainPage","registerConnectionStateChangedCallback","removeItem","ZIMKitCommon_UI","App","cacheUserInfo","_callee","zimKit","_regeneratorRuntime","wrap","_context","prev","next","createZIM","stop","Main","Login","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","es","_react_router_dom_6_3_0_react_router_dom","pages_App","d","__webpack_exports__","zego_zim_web__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"kSACaA,EAAYC,YAAY,CACjCC,KAAM,OACNC,aAAc,CACVC,QAAQ,EACRC,YAAY,GAEhBC,SAAU,CACNC,aAAc,SAACC,EAAOC,GAClBD,EAAMJ,OAASK,EAAOC,SAE1BC,MAAO,SAACH,EAAOC,GACXD,EAAMH,YAAa,GAEvBO,OAAQ,SAACJ,EAAOC,GACZD,EAAMH,YAAa,QAIgBL,EAAUa,QAA1CN,iBAAcI,UAAOC,WACvBE,EAAmB,SAACN,GAAD,MAAY,CACxCJ,OAAQI,EAAMJ,OACdC,WAAYG,EAAMH,aAEPL,IAAf,QCrBae,EAAQC,YAAe,CAAEC,QAASjB,OAEjBkB,0ECLfC,EAAA,CACX,MACA,UACA,QACA,QACA,WACA,QACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,OACA,SACA,OACA,YACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,MACA,SACA,SACA,MACA,OACA,YACA,UACA,SACA,QACA,UACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,MACA,UACA,QACA,UACA,WACA,QACA,QACA,QACA,UACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,UACA,WACA,QACA,OACA,WACA,SACA,UACA,YACA,QACA,UACA,UACA,YACA,QACA,SACA,SACA,SACA,QACA,YACA,QACA,SACA,QACA,aACA,YACA,OACA,QACA,WACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,UACA,UACA,QACA,SACA,OACA,QACA,UACA,SACA,OACA,QACA,SACA,SACA,SACA,WACA,YACA,OACA,QACA,OACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,SACA,SACA,aACA,MACA,SACA,SACA,QACA,QACA,MACA,QACA,WACA,UACA,QACA,YACA,YACA,OACA,QACA,YACA,UACA,YACA,OACA,OACA,UACA,SACA,SACA,QACA,WACA,UACA,YACA,SACA,UACA,QACA,UACA,QACA,SACA,OACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,MACA,MACA,SACA,QACA,OACA,OACA,SACA,MACA,aACA,OACA,QACA,OACA,QACA,SACA,OACA,WACA,QACA,SACA,UACA,OACA,KACA,MACA,SACA,SACA,UACA,QACA,QACA,YACA,MACA,QACA,SACA,OACA,QACA,QACA,SACA,OACA,OACA,QACA,OACA,YACA,MACA,QACA,YACA,QACA,UACA,OACA,QACA,SACA,SACA,MACA,QACA,OACA,QACA,SACA,UACA,OACA,SACA,UACA,QACA,UACA,OACA,MACA,OACA,WACA,SACA,OACA,QACA,QACA,OACA,QACA,QACA,WACA,SACA,QACA,QACA,SACA,WACA,aACA,QACA,SACA,SACA,WACA,UACA,SACA,OACA,OACA,UACA,QACA,SACA,MACA,MACA,QACA,UACA,QACA,WACA,QACA,WACA,YACA,SACA,UACA,UACA,YACA,SACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,YACA,QACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,WACA,OACA,QACA,SACA,UACA,MACA,OACA,SACA,UACA,WACA,QACA,QACA,QACA,WACA,YACA,SACA,UACA,UACA,QACA,QACA,QACA,YACA,WACA,SACA,SACA,WACA,SACA,MACA,UACA,SACA,QACA,SACA,OACA,OACA,UACA,OACA,WACA,WACA,UACA,OACA,OACA,SACA,UACA,QACA,SACA,WACA,SACA,QACA,OACA,QACA,aACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,QACA,QACA,UACA,UACA,SACA,OACA,UACA,QACA,SACA,OACA,QACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,MACA,MACA,SACA,UACA,UACA,QACA,OACA,QACA,QACA,WACA,QACA,SACA,WACA,SACA,SACA,QACA,QACA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","file":"static/js/main.70cb8211.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nexport const authSlice = createSlice({\n    name: 'AUTH',\n    initialState: {\n        isInit: false,\n        isLoggedIn: false\n    },\n    reducers: {\n        initIMKitSDK: (state, action) => {\n            state.isInit = action.payload;\n        },\n        login: (state, action) => {\n            state.isLoggedIn = true;\n        },\n        logout: (state, action) => {\n            state.isLoggedIn = false;\n        }\n    }\n});\nexport const { initIMKitSDK, login, logout } = authSlice.actions;\nexport const selectIsLoggedIn = (state) => ({\n    isInit: state.isInit,\n    isLoggedIn: state.isLoggedIn\n});\nexport default authSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authSlice from \"./authSlice\";\nexport const store = configureStore({ reducer: authSlice });\nexport const useAppDispatch = () => useDispatch();\nexport const useAppSelector = useSelector;\n","export default [\n    'Ada',\n    'Aaliyah',\n    'Aditi',\n    'Adela',\n    'Adelaide',\n    'Adele',\n    'Adora',\n    'Afra',\n    'Agatha',\n    'Agnes',\n    'Alani',\n    'Alberta',\n    'Alice',\n    'Alma',\n    'Althea',\n    'Alva',\n    'Alexandra',\n    'Alisa',\n    'Alison',\n    'Alyssa',\n    'Amanda',\n    'Amelia',\n    'Amity',\n    'Anila',\n    'Amy',\n    'Andrea',\n    'Angela',\n    'Ann',\n    'Anna',\n    'Annabelle',\n    'Antonia',\n    'Apphia',\n    'April',\n    'Arabela',\n    'Arlene',\n    'Ashley',\n    'Astrid',\n    'Atalanta',\n    'Athena',\n    'Audrey',\n    'Aurora',\n    'Ava',\n    'Barbara',\n    'Basia',\n    'Bblythe',\n    'Beatrice',\n    'Belen',\n    'Bella',\n    'Belle',\n    'Belinda',\n    'Bernice',\n    'Bertha',\n    'Beryl',\n    'Bess',\n    'Betsy',\n    'Betty',\n    'Beulah',\n    'Beverly',\n    'Blanche',\n    'Bonnie',\n    'Breenda',\n    'Brianna',\n    'Bridget',\n    'Brook',\n    'Calista',\n    'Camille',\n    'Candice',\n    'Candance',\n    'Carol',\n    'Cara',\n    'Caroline',\n    'Carlin',\n    'Caitlin',\n    'Catherine',\n    'Cathy',\n    'Cecilia',\n    'Celeste',\n    'Charlotte',\n    'Chaya',\n    'Cheryl',\n    'Cherry',\n    'Cheryl',\n    'Chloe',\n    'Christine',\n    'Clara',\n    'Claire',\n    'Clara',\n    'Clementine',\n    'Constance',\n    'Cora',\n    'Coral',\n    'Cornelia',\n    'Crystal',\n    'Cynthia',\n    'Daisy',\n    'Dale',\n    'Dana',\n    'Damla',\n    'Daphne',\n    'Darlene',\n    'Dawn',\n    'Debby',\n    'Deborah',\n    'Deirdre',\n    'Delia',\n    'Denise',\n    'Destiny',\n    'Diana',\n    'Dinah',\n    'Dolores',\n    'Dominic',\n    'Donna',\n    'Doreen',\n    'Dora',\n    'Doris',\n    'Dorothy',\n    'Eartha',\n    'Eden',\n    'Edith',\n    'Edwina',\n    'Eileen',\n    'Elaine',\n    'Eleanore',\n    'Elizabeth',\n    'Ella',\n    'Ellen',\n    'Elma',\n    'Elsa',\n    'Elsie',\n    'Elvira',\n    'Elva',\n    'Emily',\n    'Emma',\n    'Enid',\n    'Erin',\n    'Erica',\n    'Esther',\n    'Ethel',\n    'Eudora',\n    'Eunice',\n    'Evangeline',\n    'Eve',\n    'Evelyn',\n    'Faithe',\n    'Faith',\n    'Fanny',\n    'Fay',\n    'Flora',\n    'Florence',\n    'Frances',\n    'Freda',\n    'Frederica',\n    'Gabrielle',\n    'Gail',\n    'Gemma',\n    'Genevieve',\n    'Georgia',\n    'Geraldine',\n    'Gill',\n    'Gina',\n    'Giselle',\n    'Gladys',\n    'Gloria',\n    'Grace',\n    'Griselda',\n    'Gustave',\n    'Gwendolyn',\n    'Hannah',\n    'Harriet',\n    'Hazel',\n    'Heather',\n    'Hedda',\n    'Hedwig',\n    'Hedy',\n    'Helen',\n    'Heloise',\n    'Hermosa',\n    'Hilda',\n    'Hilary',\n    'Honey',\n    'Hulda',\n    'Ida',\n    'Ina',\n    'Ingrid',\n    'Irene',\n    'Iris',\n    'Irma',\n    'Isabel',\n    'Ivy',\n    'Jacqueline',\n    'Jade',\n    'Jamie',\n    'Jane',\n    'Janet',\n    'Janice',\n    'Jean',\n    'Jennifer',\n    'Jenny',\n    'Jessie',\n    'Jessica',\n    'Jill',\n    'Jo',\n    'Joa',\n    'Joanna',\n    'Joanne',\n    'Jocelyn',\n    'Jodie',\n    'Jolie',\n    'Josephine',\n    'Joy',\n    'Joyce',\n    'Judith',\n    'Judy',\n    'Julia',\n    'Julie',\n    'Juliet',\n    'June',\n    'Kama',\n    'Karen',\n    'Kate',\n    'Katherine',\n    'Kay',\n    'Kelly',\n    'Kimberley',\n    'Kitty',\n    'Kristin',\n    'Lara',\n    'Laura',\n    'Laurel',\n    'Lauren',\n    'Lee',\n    'Leila',\n    'Lena',\n    'Leona',\n    'Lesley',\n    'Letitia',\n    'Lila',\n    'Lilith',\n    'Lillian',\n    'Linda',\n    'Lindsay',\n    'Lisa',\n    'Liz',\n    'Lola',\n    'Lorraine',\n    'Louise',\n    'Lucy',\n    'Lyuba',\n    'Lydia',\n    'Lynn',\n    'Mabel',\n    'Madge',\n    'Madeline',\n    'Maggie',\n    'Mamie',\n    'Mandy',\n    'Marcia',\n    'Margaret',\n    'Marguerite',\n    'Maria',\n    'Marina',\n    'Marian',\n    'Marjorie',\n    'Martina',\n    'Martha',\n    'Mary',\n    'Maud',\n    'Maureen',\n    'Mavis',\n    'Maxine',\n    'Mag',\n    'May',\n    'Megan',\n    'Melissa',\n    'Meroy',\n    'Meredith',\n    'Merry',\n    'Michelle',\n    'Michaelia',\n    'Mignon',\n    'Mildred',\n    'Miranda',\n    'Mirabelle',\n    'Miriam',\n    'Modesty',\n    'Moira',\n    'Molly',\n    'Mona',\n    'Monica',\n    'Muriel',\n    'Murray',\n    'Myra',\n    'Myrna',\n    'Nancy',\n    'Naomi',\n    'Natalie',\n    'Natividad',\n    'Nelly',\n    'Nicole',\n    'Nicola',\n    'Nina',\n    'Nora',\n    'Norma',\n    'Novia',\n    'Nydia',\n    'Octavia',\n    'Odelia',\n    'Odelette',\n    'Olga',\n    'Olive',\n    'Olivia',\n    'Ophelia',\n    'Pag',\n    'Page',\n    'Pamela',\n    'Pandora',\n    'Patricia',\n    'Paula',\n    'Pearl',\n    'Penny',\n    'Penelope',\n    'Philipppa',\n    'Phoebe',\n    'Phoenix',\n    'Phyllis',\n    'Polly',\n    'Poppy',\n    'Prima',\n    'Priscilla',\n    'Prudence',\n    'Queena',\n    'Quanna',\n    'Quintina',\n    'Rachel',\n    'Rae',\n    'Rebecca',\n    'Regina',\n    'Renee',\n    'Renata',\n    'Rita',\n    'Riva',\n    'Roberta',\n    'Rose',\n    'Rosalind',\n    'Rosemary',\n    'Roxanne',\n    'Ruby',\n    'Ruth',\n    'Sabina',\n    'Sabrina',\n    'Sally',\n    'Salome',\n    'Samantha',\n    'Sandra',\n    'Sandy',\n    'Sara',\n    'Sarah',\n    'Sebastiane',\n    'Selena',\n    'Sharon',\n    'Sherry',\n    'Sheila',\n    'Shirley',\n    'Sibyl',\n    'Sigrid',\n    'Simona',\n    'Sophia',\n    'Spring',\n    'Stacey',\n    'Setlla',\n    'Stephanie',\n    'Susan',\n    'Susie',\n    'Susanna',\n    'Suzanne',\n    'Sylvia',\n    'Tara',\n    'Tabitha',\n    'Tammy',\n    'Teresa',\n    'Tess',\n    'Thera',\n    'Theresa',\n    'Tiffany',\n    'Tina',\n    'Tobey',\n    'Tracy',\n    'Trista',\n    'Truda',\n    'Ula',\n    'Una',\n    'Ursula',\n    'Valerie',\n    'Vanessa',\n    'Venus',\n    'Vera',\n    'Verna',\n    'Vicky',\n    'Victoria',\n    'Viola',\n    'Violet',\n    'Virginia',\n    'Vivien',\n    'Wallis',\n    'Wanda',\n    'Wendy',\n    'Winni',\n    'Winifred',\n    'Xanthe',\n    'Xaviera',\n    'Xenia',\n    'Xylia',\n    'Yedda',\n    'Yetta',\n    'Yuri',\n    'Yvette',\n    'Yvonne',\n    'Zara',\n    'Zenobia',\n    'Zoe',\n    'Zona',\n    'Zanna',\n    'Zora'\n];\n","import nameArr from './name';\nexport const getCacheUserInfo = () => {\n    return localStorage.userInfo\n        ? JSON.parse(localStorage.userInfo)\n        : null;\n};\nexport const setCacheUserInfo = (userInfo) => {\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n};\nexport const clearCacheUserInfo = () => {\n    localStorage.removeItem('userInfo');\n};\nexport const getCacheUserList = () => {\n    return localStorage.userList\n        ? JSON.parse(localStorage.userList)\n        : null;\n};\nexport const addCacheUserToList = (userInfo) => {\n    let userList = localStorage.userList\n        ? JSON.parse(localStorage.userList)\n        : [];\n    const isExist = userList.find(item => userInfo.userID === item.userID);\n    !isExist && userList.push(userInfo);\n    localStorage.setItem('userList', JSON.stringify(userList));\n};\nexport const deleteCacheUserToList = () => { };\nexport const clearCacheUserList = () => { };\nexport const createRandomName = () => {\n    return nameArr[Math.floor(Math.random() * nameArr.length)];\n};\nexport const getUserName = (value) => {\n    const cacheUserList = getCacheUserList();\n    const randomName = createRandomName();\n    const result = {\n        userName: '',\n        verify: true\n    };\n    if (value.length >= 6 && value.length <= 12) {\n        if (cacheUserList && cacheUserList.some(item => item.userID === value)) {\n            result.userName = cacheUserList.filter(item => item.userID === value)[0].userName;\n        }\n        else {\n            result.userName = randomName;\n        }\n    }\n    else {\n        result.verify = false;\n        result.userName = randomName;\n    }\n    return result;\n};\n","import CryptoJS from 'crypto-js';\nexport function generateToken(userID, seconds, appConfig) {\n    if (!userID)\n        return '';\n    console.log('===appid', appConfig);\n    const time = (Date.now() / 1000) | 0;\n    const body = {\n        app_id: appConfig.appID,\n        user_id: userID,\n        nonce: (Math.random() * 2147483647) | 0,\n        ctime: time,\n        expire: time + (seconds || 7200)\n    };\n    const key = CryptoJS.enc.Utf8.parse(appConfig.serverSecret);\n    let iv = Math.random().toString().substring(2, 18);\n    if (iv.length < 16)\n        iv += iv.substring(0, 16 - iv.length);\n    const ciphertext = CryptoJS.AES.encrypt(JSON.stringify(body), key, {\n        iv: CryptoJS.enc.Utf8.parse(iv)\n    }).toString();\n    const ciphert = Uint8Array.from(Array.from(atob(ciphertext)).map(val => val.charCodeAt(0)));\n    const len_ciphert = ciphert.length;\n    const uint8 = new Uint8Array(8 + 2 + 16 + 2 + len_ciphert);\n    uint8.set([0, 0, 0, 0]);\n    uint8.set(new Uint8Array(Int32Array.from([body.expire]).buffer).reverse(), 4);\n    uint8[8] = iv.length >> 8;\n    uint8[9] = iv.length - (uint8[8] << 8);\n    uint8.set(Uint8Array.from(Array.from(iv).map(val => val.charCodeAt(0))), 10);\n    uint8[26] = len_ciphert >> 8;\n    uint8[27] = len_ciphert - (uint8[26] << 8);\n    uint8.set(ciphert, 28);\n    const token = `04${btoa(String.fromCharCode(...Array.from(uint8)))}`;\n    console.log('generateToken', iv.length, body, token);\n    return token;\n}\n","export default {\n    appID: 2031514356,\n    serverSecret: '6e46fa37db195c449155c9fbfded9c4b'\n};\n","export var EventName;\n(function (EventName) {\n    EventName[\"zimError\"] = \"error\";\n    EventName[\"zimConnectionStateChanged\"] = \"connectionStateChanged\";\n    EventName[\"zimTokenWillExpire\"] = \"tokenWillExpire\";\n    EventName[\"zimReceivePeerMessage\"] = \"receivePeerMessage\";\n    EventName[\"zimReceiveGroupMessage\"] = \"receiveGroupMessage\";\n    EventName[\"zimConversationTotalUnreadMessageCountUpdated\"] = \"conversationTotalUnreadMessageCountUpdated\";\n    EventName[\"zimConversationChanged\"] = \"conversationChanged\";\n    EventName[\"zimKitIsLoggedIn\"] = \"isLoggedIn\";\n    EventName[\"zimKitLoginUserUpdate\"] = \"loginUserUpdate\";\n    EventName[\"zimKitDeleteConversation\"] = \"deleteConversation\";\n    EventName[\"zimKitCurrentConversationUpdate\"] = \"currentConversationUpdate\";\n    EventName[\"zimKitConversationListUpdate\"] = \"conversationListUpdate\";\n    EventName[\"zimKitConversationListQueryAbnormally\"] = \"conversationListQueryAbnormally\";\n    EventName[\"zimKitCreateGroup\"] = \"createGroup\";\n    EventName[\"zimKitCurrentChatUpdated\"] = \"currentChatUpdated\";\n    EventName[\"zimKitCurrentMessageListUpdated\"] = \"messageListUpdated\";\n    EventName[\"zimKitCurrentGroupInfoUpdated\"] = \"currentGroupInfoUpdated\";\n})(EventName || (EventName = {}));\n","export class ZIMPlatformManage {\n    constructor(platform) {\n        this.platform = platform;\n    }\n}\n","import { ZIMPlatform } from './index.entity';\nimport { ZIMPlatformManage } from './platform';\nconst platform = process.env.PLATFORM || 'web';\nexport class ZIMAdapter {\n    static initPlatform() {\n        if (platform === 'web') {\n            ZIMAdapter.zimPlatformManage = new ZIMPlatformManage(ZIMPlatform.Web);\n            return import('./web').then(zimAdapter => {\n                ZIMAdapter.zimModule = zimAdapter.ZIMWeb;\n            });\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    static getInstance() {\n        return ZIMAdapter.zimModule.getInstance();\n    }\n    static create(appID) {\n        return ZIMAdapter.zimModule.create(appID);\n    }\n    on(type, listener) {\n        return ZIMAdapter.getInstance().on(type, listener);\n    }\n    off(type) {\n        return ZIMAdapter.getInstance().off(type);\n    }\n    login(userInfo, token) {\n        return ZIMAdapter.getInstance().login(userInfo, token);\n    }\n    logout() {\n        return ZIMAdapter.getInstance().logout();\n    }\n    destroy() {\n        return ZIMAdapter.getInstance().destroy();\n    }\n    renewToken(token) {\n        return ZIMAdapter.getInstance().renewToken(token);\n    }\n    queryConversationList(config) {\n        return ZIMAdapter.getInstance().queryConversationList(config);\n    }\n    createGroup(groupInfo, userIDs, config) {\n        return ZIMAdapter.getInstance().createGroup(groupInfo, userIDs, config);\n    }\n    sendPeerMessage(message, toUserID, config) {\n        return ZIMAdapter.getInstance().sendPeerMessage(message, toUserID, config);\n    }\n    sendGroupMessage(message, toGroupID, config) {\n        return ZIMAdapter.getInstance().sendGroupMessage(message, toGroupID, config);\n    }\n    queryHistoryMessage(conversationID, conversationType, config) {\n        return ZIMAdapter.getInstance().queryHistoryMessage(conversationID, conversationType, config);\n    }\n    deleteConversation(conversationID, conversationType, config) {\n        return ZIMAdapter.getInstance().deleteConversation(conversationID, conversationType, config);\n    }\n    clearConversationUnreadMessageCount(conversationID, conversationType) {\n        return ZIMAdapter.getInstance().clearConversationUnreadMessageCount(conversationID, conversationType);\n    }\n    queryGroupInfo(groupID) {\n        return ZIMAdapter.getInstance().queryGroupInfo(groupID);\n    }\n    queryGroupMemberList(groupID, config) {\n        return ZIMAdapter.getInstance().queryGroupMemberList(groupID, config);\n    }\n    joinGroup(groupID) {\n        return ZIMAdapter.getInstance().joinGroup(groupID);\n    }\n    leaveGroup(groupID) {\n        return ZIMAdapter.getInstance().leaveGroup(groupID);\n    }\n}\n","import { EventName } from '../Constant/event';\nexport default class ZIMKitEventHandler {\n    constructor() {\n        this.eventList = {\n            [EventName.zimError]: [],\n            [EventName.zimConnectionStateChanged]: [],\n            [EventName.zimTokenWillExpire]: [],\n            [EventName.zimReceivePeerMessage]: [],\n            [EventName.zimReceiveGroupMessage]: [],\n            [EventName.zimConversationTotalUnreadMessageCountUpdated]: [],\n            [EventName.zimConversationChanged]: [],\n            [EventName.zimKitIsLoggedIn]: [],\n            [EventName.zimKitLoginUserUpdate]: [],\n            [EventName.zimKitDeleteConversation]: [],\n            [EventName.zimKitConversationListUpdate]: [],\n            [EventName.zimKitCurrentConversationUpdate]: [],\n            [EventName.zimKitConversationListQueryAbnormally]: [],\n            [EventName.zimKitCreateGroup]: [],\n            [EventName.zimKitCurrentChatUpdated]: [],\n            [EventName.zimKitCurrentMessageListUpdated]: [],\n            [EventName.zimKitCurrentGroupInfoUpdated]: []\n        };\n        if (!ZIMKitEventHandler.instance) {\n            ZIMKitEventHandler.instance = this;\n        }\n        return ZIMKitEventHandler.instance;\n    }\n    static getInstance() {\n        if (!ZIMKitEventHandler.instance) {\n            ZIMKitEventHandler.instance = new ZIMKitEventHandler();\n        }\n        return ZIMKitEventHandler.instance;\n    }\n    addEventListener(event, callBackList) {\n        if (!this.eventList[event]) {\n            return false;\n        }\n        if (!Array.isArray(callBackList)) {\n            return false;\n        }\n        callBackList.forEach(callBack => {\n            !this.eventList[event].includes(callBack) &&\n                this.eventList[event].push(callBack);\n        });\n        return true;\n    }\n    removeEventListener(event, callBackList) {\n        if (!this.eventList[event]) {\n            return false;\n        }\n        const li = this.eventList[event];\n        if (callBackList && callBackList.length) {\n            callBackList.forEach(callBack => {\n                li.splice(li.indexOf(callBack), 1);\n            });\n        }\n        else {\n            this.eventList[event] = [];\n        }\n        return true;\n    }\n    actionListener(event, ...args) {\n        this.eventList[event] &&\n            this.eventList[event].forEach(func => {\n                func(...args);\n            });\n    }\n}\n","export default {\n    common_yesterday: '昨天',\n    common_user_kick_out: '重复登录，用户被踢出',\n    common_monday: '周一',\n    common_tuesday: '周二',\n    common_wednesday: '周三',\n    common_thursday: '周四',\n    common_friday: '周五',\n    common_saturday: '周六',\n    common_sunday: '周日',\n    common_logout: '退出',\n    common_return: '返回',\n    conversation_start_chat_w: '发起聊天',\n    conversation_empty: '暂无消息\\n快去发起聊天吧',\n    conversation_start_single_chat: '发起单聊',\n    conversation_start_group_chat: '发起群聊',\n    conversation_join_group_chat: '加入群聊',\n    conversation_cancel: '取消',\n    conversation_delete: '删除',\n    conversation_message_total_count: '消息总数',\n    conversation_reload: '重新加载',\n    conversation_enter_touserid_w: '请输入对方用户ID',\n    conversation_close_chat_w: '关闭聊天',\n    demo_login_hint: '输入用户id',\n    demo_login: '登录',\n    demo_user_name: '用户名为:%s',\n    demo_user_name_w: '随机用户昵称',\n    demo_welcome: '您好，\\n欢迎使用 Zego IM',\n    demo_input_user_id_error_tips: '请输入6–12位英文或数字的用户ID',\n    demo_input_placeholder_w: '请输入6–12位英文或数字的用户ID',\n    demo_user_id_login: '用户ID登录',\n    group_create_chat: '发起会话',\n    group_input_group_id: '输入群ID',\n    group_input_group_id_w: '输入群聊ID',\n    group_input_group_name: '输入群聊名称',\n    group_input_user_id_of_group: \"输入群成员的用户ID，';'英文分号隔开\",\n    group_input_user_id_of_group_w: \"输入群成员的用户ID，';'英文分号隔开\",\n    group_user_id_cant_null: '用户id不能为空',\n    group_create_group_chat_title: '发起群聊会话',\n    group_join_group_chat: '加入群聊会话',\n    group_user_not_exit: '用户不存在',\n    group_group_not_exit: '群不存在',\n    group_group_user_id_not_exit: '群成员用户ID %s 不存在，请返回',\n    group_group_user_id_not_exit_w: '请返回修改',\n    group_group_id_not_exit: '群ID %s 不存在，请返回',\n    group_group_id_not_exit_w: '不存在，请返回修改',\n    group_input_user_id_error_tip: '请输入6–12位英文或数字的用户ID',\n    group_group_id: '群聊ID',\n    group_copy: '复制',\n    group_copy_success: '复制成功',\n    message_input_new_message: '输入新消息',\n    message_user_not_exit_please_again: '用户ID:%s不存在，请返回重新添加',\n    message_user_not_exit_please_again_w_1: '用户ID',\n    message_user_not_exit_please_again_w_2: '不存在，请返回重新添加',\n    message_cant_send_empty_msg: '不允许发送空白消息',\n    message_create_chat: '发起会话',\n    message_input_user_id_error_tips: '请输入6–12位英文或数字的用户ID',\n    message_create_single_chat: '发起单聊会话',\n    message_send_w: '发送',\n    message_empty_w: '暂时还没有收到消息'\n};\n","export default {\n    common_yesterday: 'Yesterday',\n    common_user_kick_out: 'The user is kicked out because the ID is reused for login. ',\n    common_monday: 'Monday',\n    common_tuesday: 'Tuesday',\n    common_wednesday: 'Wednesday',\n    common_thursday: 'Thursday',\n    common_friday: 'Friday',\n    common_saturday: 'Saturday',\n    common_sunday: 'Sunday',\n    common_logout: 'Log out',\n    common_return: 'Back',\n    conversation_start_chat_w: 'New Chat',\n    conversation_empty: 'No chats.\\nStart chatting now.',\n    conversation_start_single_chat: 'One-on-one chat',\n    conversation_start_group_chat: 'Group chat',\n    conversation_join_group_chat: 'Join a group',\n    conversation_cancel: 'Cancel',\n    conversation_delete: 'Delete',\n    conversation_message_total_count: 'Chats',\n    conversation_reload: 'Reload',\n    conversation_enter_touserid_w: 'Enter a user ID',\n    conversation_close_chat_w: 'Delete',\n    demo_login_hint: 'User ID',\n    demo_login: 'Log in',\n    demo_user_name: 'Username: %s',\n    demo_user_name_w: 'Random nickname',\n    demo_welcome: 'Hi, \\nwelcome to ZEGOCLOUD \\nIn-app Chat.',\n    demo_input_user_id_error_tips: 'The userID must be between 6-12 characters using letters and numbers.',\n    demo_input_placeholder_w: '6-12 bit userID, include letters and numbers',\n    demo_user_id_login: 'User Login',\n    group_create_chat: 'OK',\n    group_input_group_id: 'Group ID',\n    group_input_group_id_w: 'Group ID',\n    group_input_group_name: 'Group name',\n    group_input_user_id_of_group: \"Enter the user IDS of the group members, separated by ';'.\",\n    group_input_user_id_of_group_w: \"Enter the user IDS of the group members, separated by ';'.\",\n    group_user_id_cant_null: 'User ID is required.',\n    group_create_group_chat_title: 'New group chat',\n    group_join_group_chat: 'Join a group chat',\n    group_user_not_exit: \"The user doesn't exist.\",\n    group_group_not_exit: \"The group doesn't exist.\",\n    group_group_user_id_not_exit: \"The user ID (%s) doesn't exist. Please modify and try again.\",\n    group_group_user_id_not_exit_w: 'Please modify and try again.',\n    group_group_id_not_exit: \"The group (%s) doesn't exist. Please try again.\",\n    group_group_id_not_exit_w: \"It doesn't exist. Please modify and try again.\",\n    group_input_user_id_error_tip: 'The userID must be between 6-12 characters using letters and numbers.',\n    group_group_id: 'Group ID',\n    group_copy: 'Copy',\n    group_copy_success: 'Copied.',\n    message_input_new_message: '',\n    message_user_not_exit_please_again: \"The user ID (%s) doesn't exist. Please try again.\",\n    message_user_not_exit_please_again_w_1: 'User ID',\n    message_user_not_exit_please_again_w_2: \"It doesn't exist. Please try again.\",\n    message_cant_send_empty_msg: 'Blank messages are not allowed',\n    message_create_chat: 'OK',\n    message_input_user_id_error_tips: 'The userID must be between 6-12 characters using letters and numbers.',\n    message_create_single_chat: 'New 1-on-1 chat',\n    message_send_w: 'Send',\n    message_empty_w: 'No messages received.'\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport zh from '../../locales/zh';\nimport en from '../../locales/en';\nclass ZIMKiti18n {\n    constructor() {\n        this.localesData = {\n            en: {},\n            zh: {}\n        };\n        this.i18next = i18n.use(initReactI18next);\n        if (!ZIMKiti18n.instance) {\n            const localesData = { en, zh };\n            this.localesData = localesData;\n            ZIMKiti18n.instance = this;\n        }\n        return ZIMKiti18n.instance;\n    }\n    static getInstance() {\n        if (!ZIMKiti18n.instance) {\n            ZIMKiti18n.instance = new ZIMKiti18n();\n        }\n        return ZIMKiti18n.instance;\n    }\n    static destroy() {\n        ZIMKiti18n.instance.localesData = { en: {}, cn: {} };\n        ZIMKiti18n.instance = null;\n    }\n    init() {\n        const options = {\n            resources: {\n                zh: { translation: this.localesData.zh },\n                en: { translation: this.localesData.en }\n            },\n            fallbackLng: navigator.language,\n            detection: {\n                caches: ['localStorage', 'sessionStorage', 'cookie']\n            }\n        };\n        return this.i18next.init(options);\n    }\n    provideMessage(localesData) {\n        this.localesData.en = Object.assign(Object.assign({}, this.localesData.en), localesData.en);\n        this.localesData.zh = Object.assign(Object.assign({}, this.localesData.zh), localesData.zh);\n        return this.localesData;\n    }\n    getLocalesData() {\n        return this.localesData;\n    }\n    getI18next() {\n        return this.i18next;\n    }\n}\nexport default ZIMKiti18n;\n","import { ZIMAdapter } from '../../ZIMAdapter';\nimport ZIMKitEventHandler from './ZIMKitEventHandler';\nimport { EventName } from '../Constant/event';\nimport ZIMKiti18n from '../../../plugin/i18n';\nZIMKiti18n.getInstance().init();\nexport default class ZIMKitManager {\n    constructor() {\n        this.eventHandler = ZIMKitEventHandler.getInstance();\n        this.userInfo = {};\n        this.isInit = false;\n        this.isLoggedIn = false;\n        if (!ZIMKitManager.instance) {\n            ZIMKitManager.instance = this;\n        }\n        return ZIMKitManager.instance;\n    }\n    static getInstance() {\n        if (!ZIMKitManager.instance) {\n            ZIMKitManager.instance = new ZIMKitManager();\n        }\n        return ZIMKitManager.instance;\n    }\n    createZIM(appConfig) {\n        this.appConfig = appConfig;\n        return ZIMAdapter.initPlatform().then(() => {\n            this.zim = ZIMAdapter.create(appConfig.appID);\n            this.isInit = true;\n            this.onEvent();\n            window.manager = this;\n        });\n    }\n    loginWithUserInfo(userInfo, token) {\n        this.userInfo = userInfo;\n        return this.zim.login(userInfo, token).then(() => {\n            this.token = token;\n            this.isLoggedIn = true;\n            this.eventHandler.actionListener(EventName.zimKitLoginUserUpdate, userInfo);\n        });\n    }\n    logout() {\n        this.isLoggedIn = false;\n        this.token = '';\n        return this.zim.logout();\n    }\n    destroy() {\n        this.offEvent();\n        this.zim.destroy();\n        this.isInit = false;\n    }\n    registerConnectionStateChangedCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimConnectionStateChanged, [\n            callback\n        ]);\n    }\n    onEvent() {\n        this.zim.on(EventName.zimError, (zim, errorInfo) => {\n            this.eventHandler.actionListener(EventName.zimError, errorInfo);\n        });\n        this.zim.on(EventName.zimConnectionStateChanged, (zim, data) => {\n            if (data.state === 0 && data.event === 3) {\n                this.zim.login(this.userInfo, this.token);\n            }\n            this.eventHandler.actionListener(EventName.zimConnectionStateChanged, data);\n        });\n        this.zim.on(EventName.zimReceivePeerMessage, (zim, data) => {\n            this.eventHandler.actionListener(EventName.zimReceivePeerMessage, data);\n        });\n        this.zim.on(EventName.zimReceiveGroupMessage, (zim, data) => {\n            this.eventHandler.actionListener(EventName.zimReceiveGroupMessage, data);\n        });\n        this.zim.on(EventName.zimConversationTotalUnreadMessageCountUpdated, (zim, data) => {\n            this.eventHandler.actionListener(EventName.zimConversationTotalUnreadMessageCountUpdated, data);\n        });\n        this.zim.on(EventName.zimConversationChanged, (zim, data) => {\n            this.eventHandler.actionListener(EventName.zimConversationChanged, data);\n        });\n    }\n    offEvent() {\n        this.zim.off(EventName.zimError);\n        this.zim.off(EventName.zimConversationChanged);\n        this.zim.off(EventName.zimTokenWillExpire);\n        this.zim.off(EventName.zimReceivePeerMessage);\n        this.zim.off(EventName.zimReceiveGroupMessage);\n        this.zim.off(EventName.zimConversationTotalUnreadMessageCountUpdated);\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { login, selectIsLoggedIn } from '../../store/authSlice';\nimport { addCacheUserToList, getUserName, setCacheUserInfo } from '../../util';\nimport { generateToken } from '../../util/token';\nimport appConfig from '../../config';\nimport ZIMKitManager from '../../ZIMKit/src/components/ZIMKitCommon/VM/ZIMKitManager';\nimport './style.css';\nimport { Navigate } from 'react-router-dom';\nimport ZIMKiti18n from '../../ZIMKit/src/plugin/i18n';\nconst i18n = ZIMKiti18n.getInstance().getI18next();\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { userID: '', userName: '', verify: false };\n    this.getUserName = this.getUserName.bind(this);\n    this.loginFun = this.loginFun.bind(this);\n  }\n  componentDidMount() {\n    const result = getUserName('');\n    this.setState({ ...result });\n    console.log('i18n', i18n);\n  }\n  getUserName(event) {\n    const userID = event.target.value;\n    const result = getUserName(userID);\n    this.setState({ userID, ...result });\n  }\n  loginFun() {\n    const token = generateToken(this.state.userID, 0, appConfig);\n    const userInfo = {\n      userID: this.state.userID,\n      userName: this.state.userName\n    };\n    ZIMKitManager.getInstance()\n      .loginWithUserInfo(userInfo, token)\n      .then(() => {\n        setCacheUserInfo(userInfo);\n        addCacheUserToList(userInfo);\n        this.props.login();\n      })\n      .catch((error) => {\n        this.setState({ verify: false });\n      });\n  }\n  render() {\n    return (\n      <div id=\"login\">\n        {this.props.isLoggedIn && <Navigate to=\"/main\" replace={true} />}\n        <div className=\"login-box\">\n          <div className=\"welcome-box\">\n            <div className=\"welcome-text\">{i18n.t('demo_welcome')}</div>\n          </div>\n          <div className={`form ${i18n.language === 'en' ? 'en-form' : null}`}>\n            <div className=\"id\">\n              <div className=\"label\">{i18n.t('demo_user_id_login')}</div>\n              <input\n                className={i18n.language === 'en' ? 'en-input' : null}\n                placeholder={i18n.t('demo_input_placeholder_w')}\n                onInput={this.getUserName}\n              />\n              <div\n                className=\"login-err-tip\"\n                style={{\n                  display:\n                    !this.state.verify && this.state.userID ? 'block' : 'none'\n                }}>\n                {i18n.t('demo_input_user_id_error_tips')}\n              </div>\n            </div>\n            <div className=\"name\">\n              <div className=\"label\">{i18n.t('demo_user_name_w')}</div>\n              <div id=\"userName\">{this.state.userName}</div>\n            </div>\n            <button\n              className=\"login-btn\"\n              onClick={this.loginFun}\n              disabled={!this.state.verify}>\n              {i18n.t('demo_login')}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: content => dispatch(login(content))\n  };\n};\n\nexport default connect(selectIsLoggedIn, mapDispatchToProps)(LoginPage);\n","export default class ZIMKitConversationModel {\n    constructor(conversation) {\n        this.conversationID = conversation.conversationID;\n        this.conversationName = conversation.conversationName;\n        this.type = conversation.type;\n        this.unreadMessageCount = conversation.unreadMessageCount;\n        this.lastMessage = conversation.lastMessage;\n        this.orderKey = conversation.orderKey;\n        this.notificationStatus = conversation.notificationStatus;\n    }\n}\n","import ZIMKitManager from '../../ZIMKitCommon/VM/ZIMKitManager';\nimport ZIMKitEventHandler from '../../ZIMKitCommon/VM/ZIMKitEventHandler';\nimport ZIMKitConversationModel from '../Model';\nimport { EventName } from '../../ZIMKitCommon/Constant/event';\nexport default class ZIMKitConversationVM {\n    constructor() {\n        this.eventHandler = ZIMKitEventHandler.getInstance();\n        this.pagePullCount = 100;\n        this.conversationList = [];\n        this.totalUnreadMessageCount = 0;\n        this.isAbnormal = false;\n        this.activeCvID = '';\n        this.loadStatus = 0;\n        if (!ZIMKitConversationVM.instance) {\n            ZIMKitConversationVM.instance = this;\n            ZIMKitConversationVM.instance.initListenerHandle();\n        }\n        return ZIMKitConversationVM.instance;\n    }\n    static getInstance() {\n        if (!ZIMKitConversationVM.instance) {\n            ZIMKitConversationVM.instance = new ZIMKitConversationVM();\n        }\n        return ZIMKitConversationVM.instance;\n    }\n    initListenerHandle() {\n        this.eventHandler.addEventListener(EventName.zimConversationTotalUnreadMessageCountUpdated, [\n            (data) => {\n                this.totalUnreadMessageCount = data.totalUnreadMessageCount;\n            }\n        ]);\n        this.eventHandler.addEventListener(EventName.zimConversationChanged, [\n            (data) => {\n                if (this.loadStatus !== 2) {\n                    return;\n                }\n                let updateListFlag = false;\n                let updateCurrentFlag = false;\n                data.infoList.forEach(info => {\n                    switch (info.event) {\n                        case 1:\n                            if (this.conversationList.length) {\n                                let isExist = false;\n                                this.conversationList.forEach((item) => {\n                                    if (item.conversationID === info.conversation.conversationID) {\n                                        isExist = true;\n                                        Object.assign(item, info.conversation);\n                                        if (this.activeCvID === info.conversation.conversationID) {\n                                            updateCurrentFlag = true;\n                                        }\n                                        updateListFlag = true;\n                                    }\n                                });\n                                if (!isExist) {\n                                    this.conversationList.push(info.conversation);\n                                    updateListFlag = true;\n                                }\n                            }\n                            else {\n                                this.conversationList.push(info.conversation);\n                                this.activeCvID = info.conversation.conversationID;\n                                updateListFlag = true;\n                                updateCurrentFlag = true;\n                            }\n                            break;\n                        case 0:\n                            const len = this.conversationList.length;\n                            updateListFlag = this.insetConversationList(info.conversation);\n                            if (!len) {\n                                this.activeCvID = info.conversation.conversationID;\n                                updateCurrentFlag = true;\n                            }\n                            break;\n                        default:\n                            break;    \n                    }\n                });\n                if (updateListFlag) {\n                    this.sortCvListHandle();\n                    this.eventHandler.actionListener(EventName.zimKitConversationListUpdate, this.conversationList);\n                }\n                if (updateCurrentFlag) {\n                    const currentConversation = this.getConversationByID(this.activeCvID);\n                    this.eventHandler.actionListener(EventName.zimKitCurrentConversationUpdate, currentConversation);\n                    currentConversation.unreadMessageCount &&\n                        this.clearConversationUnreadMessageCount(currentConversation.conversationID, currentConversation.type);\n                }\n            }\n        ]);\n    }\n    loadConversationList() {\n        const config = {\n            nextConversation: undefined,\n            count: localStorage.count || this.pagePullCount\n        };\n        if (this.loadStatus === 1) {\n            return Promise.reject();\n        } \n        this.loadStatus = 1;\n        return ZIMKitManager.getInstance()\n            .zim.queryConversationList(config)\n            .then((data) => {\n            console.warn('zimkit react loadConversationList', data.conversationList);\n            this.loadStatus = 2;\n            this.isAbnormal = false;\n            this.conversationList.length = 0;\n            data.conversationList.forEach((item) => {\n                if (item.type === 0 || item.type === 2) {\n                    this.conversationList.push(new ZIMKitConversationModel(item));\n                }\n            });\n            this.sortCvListHandle();\n            if (this.conversationList.length && !this.activeCvID) {\n                const firstConversation = this.conversationList[0];\n                this.activeCvID = firstConversation.conversationID;\n                this.clearConversationUnreadMessageCount(firstConversation.conversationID, firstConversation.type);\n            }\n            this.eventHandler.actionListener(EventName.zimKitConversationListUpdate, this.conversationList);\n            this.eventHandler.actionListener(EventName.zimKitCurrentConversationUpdate, this.getConversationByID(this.activeCvID));\n            this.eventHandler.actionListener(EventName.zimKitConversationListQueryAbnormally, false);\n        })\n        .catch((error) => {\n            this.loadStatus = 2;\n            this.isAbnormal = true;\n            this.eventHandler.actionListener(EventName.zimKitConversationListQueryAbnormally, true);\n        });\n    }\n    setCurrentConversation(conversationID) {\n        this.activeCvID = conversationID;\n        this.eventHandler.actionListener(EventName.zimKitCurrentConversationUpdate, this.getConversationByID(conversationID));\n    }\n    setTempConversation(conversation) {\n        this.activeCvID = conversation.conversationID;\n        this.eventHandler.actionListener(EventName.zimKitCurrentConversationUpdate, conversation);\n    }\n    loadNextPage() {\n        const config = {\n            nextConversation: this.conversationList[this.conversationList.length - 1],\n            count: this.pagePullCount\n        };\n        ZIMKitManager.getInstance()\n            .zim.queryConversationList(config)\n            .then((data) => {\n            console.warn('zimkit react loadNextPage', data.conversationList);\n            data.conversationList.forEach((item) => {\n                if (item.type === 0 || item.type === 2) {\n                    this.conversationList.push(new ZIMKitConversationModel(item));\n                }\n            });\n            this.sortCvListHandle();\n            this.eventHandler.actionListener(EventName.zimKitConversationListUpdate, this.conversationList);\n        });\n    }\n    deleteConversation(conversationID, conversationType) {\n        const config = { isAlsoDeleteServerConversation: true };\n        return ZIMKitManager.getInstance()\n            .zim.deleteConversation(conversationID, conversationType, config)\n            .then((data) => {\n            this.conversationList.forEach((item, index) => {\n                if (item.conversationID === data.conversationID) {\n                    this.conversationList.splice(index, 1);\n                }\n            });\n            if (conversationID === this.activeCvID &&\n                this.conversationList.length) {\n                this.activeCvID = this.conversationList[0].conversationID;\n                this.eventHandler.actionListener(EventName.zimKitCurrentConversationUpdate, this.conversationList[0]);\n            }\n            this.eventHandler.actionListener(EventName.zimKitConversationListUpdate, this.conversationList);\n            this.eventHandler.actionListener(EventName.zimKitDeleteConversation, conversationID);\n            return data;\n        });\n    }\n    removeData() { }\n    clearConversationUnreadMessageCount(conversationID, conversationType) {\n        return ZIMKitManager.getInstance()\n            .zim.clearConversationUnreadMessageCount(conversationID, conversationType)\n            .catch((error) => {\n            console.error(error);\n        });\n    }\n    registerIsLoggedInCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitIsLoggedIn, [callback]);\n    }\n    registerCvTotalUnreadMessageCountUpdatedCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimConversationTotalUnreadMessageCountUpdated, [callback]);\n    }\n    registerCvListUpdatedCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitConversationListUpdate, [\n            callback\n        ]);\n    }\n    registerAbnormalCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitConversationListQueryAbnormally, [callback]);\n    }\n    registerCurrentCvUpdatedCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitCurrentConversationUpdate, [callback]);\n    }\n    unInit() {\n        this.conversationList.length = 0;\n        this.totalUnreadMessageCount = 0;\n        this.isAbnormal = false;\n        this.activeCvID = '';\n        this.loadStatus = 0;\n    }\n    getConversationByID(conversationID) {\n        return this.conversationList.filter(conversation => conversation.conversationID === conversationID)[0];\n    }\n    insetConversationList(insetConversation) {\n        let result = false;\n        const isExist = this.conversationList.find(conversation => insetConversation.conversationID === conversation.conversationID);\n        if (isExist === undefined) {\n            this.conversationList.push(insetConversation);\n            result = true;\n        }\n        return result;\n    }\n    sortCvListHandle() {\n        this.conversationList.sort((a, b) => b.orderKey - a.orderKey);\n    }\n}\n","import { EventName } from '../../ZIMKitCommon/Constant/event';\nimport ZIMKitEventHandler from '../../ZIMKitCommon/VM/ZIMKitEventHandler';\nimport ZIMKitManager from '../../ZIMKitCommon/VM/ZIMKitManager';\nexport default class ZIMKitGroupVM {\n    constructor() {\n        this.eventHandler = ZIMKitEventHandler.getInstance();\n        this.memberList = [];\n        if (!ZIMKitGroupVM.instance) {\n            ZIMKitGroupVM.instance = this;\n            ZIMKitGroupVM.instance.initListenerHandle();\n        }\n        return ZIMKitGroupVM.instance;\n    }\n    static getInstance() {\n        if (!ZIMKitGroupVM.instance) {\n            ZIMKitGroupVM.instance = new ZIMKitGroupVM();\n        }\n        return ZIMKitGroupVM.instance;\n    }\n    initListenerHandle() {\n        this.eventHandler.addEventListener(EventName.zimKitCreateGroup, [() => { }]);\n        this.eventHandler.addEventListener(EventName.zimKitCurrentConversationUpdate, [\n            conversation => {\n                if (!conversation)\n                    return;\n                if (conversation.type === 2) {\n                    this.currentGroupInfo = {\n                        baseInfo: {\n                            groupID: conversation.conversationID,\n                            groupName: conversation.conversationName\n                        }\n                    };\n                    this.eventHandler.actionListener(EventName.zimKitCurrentGroupInfoUpdated, this.currentGroupInfo);\n                    this.queryGroupMemberList(conversation.conversationID);\n                }\n            }\n        ]);\n    }\n    createGroup(groupID, groupName, userIDList) {\n        const currentGroupInfo = { groupID, groupName };\n        return ZIMKitManager.getInstance()\n            .zim.createGroup(currentGroupInfo, userIDList)\n            .then((data) => {\n            this.currentGroupInfo = data.groupInfo;\n            this.eventHandler.actionListener(EventName.zimKitCurrentGroupInfoUpdated, this.currentGroupInfo);\n            return data;\n        });\n    }\n    queryGroupMemberList(groupID) {\n        const config = { count: 100, nextFlag: 0 };\n        return ZIMKitManager.getInstance()\n            .zim.queryGroupMemberList(groupID, config)\n            .then(data => {\n            this.memberList = data.userList;\n        });\n    }\n    joinGroup(groupID) {\n        return ZIMKitManager.getInstance()\n            .zim.joinGroup(groupID)\n            .then((data) => {\n            this.currentGroupInfo = data.groupInfo;\n            this.eventHandler.actionListener(EventName.zimKitCurrentGroupInfoUpdated, this.currentGroupInfo);\n            return data;\n        });\n    }\n    leaveGroup(groupID) {\n        return ZIMKitManager.getInstance().zim.leaveGroup(groupID);\n    }\n    dismissGroup(groupID) { }\n    inviteUsersJoinGroup(userIDList, groupID) { }\n    kickGroupMembers(userIDList, groupID) { }\n    queryGroupInfo(groupID) {\n        return ZIMKitManager.getInstance().zim.queryGroupInfo(groupID);\n    }\n    unInit() {\n        this.currentGroupInfo = null;\n        this.memberList.length = 0;\n    }\n    registerCurrentGroupInfoUpdateCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitCurrentGroupInfoUpdated, [callback]);\n    }\n}\n","import React from 'react';\nimport './../../common.css';\nimport './style.css';\nimport ZIMKiti18n from '../../../../../plugin/i18n';\nconst i18n = ZIMKiti18n.getInstance().getI18next();\n\nclass TabItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeNav = this.changeNav.bind(this);\n  }\n  changeNav() {\n    this.props.onNavChange(this.props.item);\n  }\n  render() {\n    return (\n      <div\n        className={'title' + (this.props.item.actived ? ' actived' : '')}\n        onClick={this.changeNav}>\n        {this.props.item.text}\n      </div>\n    );\n  }\n}\n\nclass TabList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabList: this.props.tabList.map((element, index) => {\n        return { ...element, actived: !index ? true : false };\n      })\n    };\n    this.handleNavChange = this.handleNavChange.bind(this);\n  }\n  handleNavChange(current) {\n    this.state.tabList.forEach(item => {\n      item.actived = item.id === current.id;\n    });\n    this.setState({\n      tabList: this.state.tabList\n    });\n    this.props.onNavChange(current);\n  }\n  render() {\n    let tabListView = null;\n    if (this.state.tabList) {\n      tabListView = this.state.tabList.map(element => (\n        <TabItem\n          key={element.id}\n          item={element}\n          onNavChange={this.handleNavChange}\n        />\n      ));\n    }\n    return <div className=\"top\">{tabListView}</div>;\n  }\n}\n\nclass TableContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peerErrTip: false,\n      peerDisabled: true,\n      groupErrTip: false,\n      groupDisabled: true,\n      groupID: '',\n      toUserID: '',\n      groupName: '',\n      userIDList: ''\n    };\n    this.closeDialog = this.closeDialog.bind(this);\n    this.createPeerChat = this.createPeerChat.bind(this);\n    this.createGroupChat = this.createGroupChat.bind(this);\n    this.joinGroup = this.joinGroup.bind(this);\n    this.handleUserIDInputChange = this.handleUserIDInputChange.bind(this);\n    this.handleGroupUserIDInputChange = this.handleGroupUserIDInputChange.bind(\n      this\n    );\n    this.handleGroupIDInputChange = this.handleGroupIDInputChange.bind(this);\n    this.handleGroupNameInputChange = this.handleGroupNameInputChange.bind(\n      this\n    );\n  }\n  closeDialog() {\n    this.props.onCloseDialog();\n  }\n  createPeerChat() {\n    this.props.onCreatePeerChat(this.state.toUserID);\n  }\n  createGroupChat() {\n    this.props.onCreateGroupChat(this.state.groupName, this.state.userIDList);\n  }\n  joinGroup() {\n    this.props.onJoinGroup(this.state.groupID);\n  }\n  handleUserIDInputChange(event) {\n    const toUserID = event.target.value;\n    if (toUserID.length) {\n      const result = toUserID.length < 6 || toUserID.length > 12;\n      this.setState({\n        toUserID,\n        peerErrTip: result,\n        peerDisabled: result\n      });\n    } else {\n      this.setState({\n        toUserID,\n        peerErrTip: false,\n        peerDisabled: true\n      });\n    }\n  }\n  handleGroupUserIDInputChange(event) {\n    const userIDList = event.target.value;\n    let groupDisabled = true,\n      groupErrTip = true;\n    if (this.state.groupName.length && userIDList.length) {\n      groupDisabled = false;\n    }\n    if (userIDList) {\n      const arr = userIDList.split(';');\n      let flag = false;\n      arr.forEach(item => {\n        if (item.length < 6 || item.length > 12) {\n          flag = true;\n          groupDisabled = true;\n        }\n      });\n      groupErrTip = flag;\n    } else {\n      groupErrTip = false;\n    }\n    this.setState({\n      userIDList,\n      groupErrTip,\n      groupDisabled\n    });\n  }\n  handleGroupIDInputChange(event) {\n    this.setState({\n      groupID: event.target.value\n    });\n  }\n  handleGroupNameInputChange(event) {\n    const groupName = event.target.value;\n    this.setState({\n      groupName,\n      groupDisabled: !(groupName.length && this.state.userIDList.length)\n    });\n  }\n  render() {\n    let tableContentView = null;\n    let errTipView = null;\n    const {\n      groupID,\n      peerDisabled,\n      groupDisabled,\n      peerErrTip,\n      groupErrTip,\n      toUserID,\n      userIDList\n    } = this.state;\n    const { currentActived } = this.props;\n    if ((peerErrTip && toUserID) || (groupErrTip && userIDList)) {\n      // @ts-ignore\n      errTipView = (\n        <div className=\"err-tip\">{i18n.t('demo_input_user_id_error_tips')}</div>\n      );\n    }\n    if (currentActived === 1) {\n      // @ts-ignore\n      tableContentView = (\n        <div className=\"peer\" key=\"peer\">\n          <div className=\"input-box\">\n            <input\n              className={i18n.language === 'en' ? 'en-input' : null}\n              type=\"text\"\n              name=\"userID\"\n              placeholder={i18n.t('conversation_enter_touserid_w')}\n              onInput={this.handleUserIDInputChange}\n            />\n            {errTipView}\n          </div>\n          <div className=\"btn-box\">\n            <button className=\"btn cancel-btn\" onClick={this.closeDialog}>\n              {i18n.t('conversation_cancel')}\n            </button>\n            <button\n              className=\"btn create-peer-btn\"\n              onClick={this.createPeerChat}\n              disabled={peerDisabled}>\n              {i18n.t('conversation_start_single_chat')}\n            </button>\n          </div>\n        </div>\n      );\n    } else if (currentActived === 2) {\n      // @ts-ignore\n      tableContentView = (\n        <div className=\"group\" key=\"group\">\n          <div className=\"input-box\">\n            <input\n              className={i18n.language === 'en' ? 'en-input' : null}\n              type=\"text\"\n              name=\"groupName\"\n              placeholder={i18n.t('group_input_group_name')}\n              onInput={this.handleGroupNameInputChange}\n              maxLength={12}\n            />\n            <input\n              className={i18n.language === 'en' ? 'en-input' : null}\n              type=\"text\"\n              name=\"userIDList\"\n              placeholder={i18n.t('group_input_user_id_of_group_w')}\n              onInput={this.handleGroupUserIDInputChange}\n            />\n            {errTipView}\n          </div>\n          <div className=\"btn-box\">\n            <button className=\"btn cancel-btn\" onClick={this.closeDialog}>\n              {i18n.t('conversation_cancel')}\n            </button>\n            <button\n              className=\"btn create-peer-btn\"\n              onClick={this.createGroupChat}\n              disabled={groupDisabled}>\n              {i18n.t('conversation_start_group_chat')}\n            </button>\n          </div>\n        </div>\n      );\n    } else if (currentActived === 3) {\n      // @ts-ignore\n      tableContentView = (\n        <div className=\"attend\" key=\"attend\">\n          <div className=\"input-box\">\n            <input\n              className={i18n.language === 'en' ? 'en-input' : null}\n              type=\"text\"\n              name=\"groupID\"\n              placeholder={i18n.t('group_input_group_id_w')}\n              onInput={this.handleGroupIDInputChange}\n            />\n          </div>\n          <div className=\"btn-box\">\n            <button className=\"btn cancel-btn\" onClick={this.closeDialog}>\n              {i18n.t('conversation_cancel')}\n            </button>\n            <button\n              className=\"btn create-peer-btn\"\n              onClick={this.joinGroup}\n              disabled={!groupID}>\n              {i18n.t('conversation_join_group_chat')}\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return <div className=\"content\">{tableContentView}</div>;\n  }\n}\n\nclass CreateChatDialog extends React.Component {\n  tabList = [\n    {\n      id: 1,\n      text: i18n.t('conversation_start_single_chat')\n    },\n    {\n      id: 2,\n      text: i18n.t('conversation_start_group_chat')\n    },\n    {\n      id: 3,\n      text: i18n.t('conversation_join_group_chat')\n    }\n  ];\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentActived: 1\n    };\n    this.handleNavChange = this.handleNavChange.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    this.handleJoinGroup = this.handleJoinGroup.bind(this);\n    this.handleCreatePeerChat = this.handleCreatePeerChat.bind(this);\n    this.handleCreateGroupChat = this.handleCreateGroupChat.bind(this);\n  }\n  handleNavChange(current) {\n    this.setState({\n      currentActived: current.id\n    });\n  }\n  handleCloseDialog() {\n    this.props.onCloseDialog();\n  }\n  handleJoinGroup(groupID) {\n    this.props.onJoinGroup(groupID);\n  }\n  handleCreatePeerChat(toUserID) {\n    this.props.onCreatePeerChat(toUserID);\n  }\n  handleCreateGroupChat(groupName, userIDList) {\n    this.props.onCreateGroupChat(groupName, userIDList);\n  }\n  render() {\n    return (\n      <div className=\"dialog\">\n        <TabList tabList={this.tabList} onNavChange={this.handleNavChange} />\n        <TableContent\n          currentActived={this.state.currentActived}\n          onCloseDialog={this.handleCloseDialog}\n          onJoinGroup={this.handleJoinGroup}\n          onCreatePeerChat={this.handleCreatePeerChat}\n          onCreateGroupChat={this.handleCreateGroupChat}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CreateChatDialog;\n","import React from \"react\";\nimport './../../common.css'\nimport './style.css'\nimport ZIMKiti18n from '../../../../../plugin/i18n';\nconst i18n = ZIMKiti18n.getInstance().getI18next();\n\nclass RightClickDialog extends React.Component {\n    constructor (props) {\n        super(props);\n        this.deleteConversation = this.deleteConversation.bind(this);\n        this.closeConversation = this.closeConversation.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(event) {\n        let flag = false;\n        try {\n            event.path.forEach(path => {\n                if (path.className && path.className.includes(\"right-click-box\")) {\n                    flag = true;\n                    throw new Error(\"break\");\n                }\n            })\n        } catch (error) { }\n        if (!flag) {\n            this.closeConversation();\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"click\", this.handleClick);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"click\", this.handleClick)\n    }\n    deleteConversation() {\n        this.props.onDeleteConversation();\n    }\n    closeConversation() {\n        this.props.onCloseConversation();\n    }\n    render() {\n        return (<div className=\"right-click-box\" style={{ top: `${this.props.y}px`, left: `${this.props.x}px` }}>\n            <div className=\"item\" onClick={ this.deleteConversation }>{ i18n.t(\"conversation_close_chat_w\") }</div>\n        </div>)\n    }\n}\n\nexport default RightClickDialog;","import ZIMKiti18n from '../../../plugin/i18n';\nconst i18n = ZIMKiti18n.getInstance().getI18next();\nexport function dateFormat(date, time) {\n    if (date === 0)\n        return '--';\n    const newDate = new Date(date);\n    const today = new Date(new Date().toDateString());\n    const dayList = {\n        1: i18n.t('common_monday'),\n        2: i18n.t('common_tuesday'),\n        3: i18n.t('common_wednesday'),\n        4: i18n.t('common_thursday'),\n        5: i18n.t('common_friday'),\n        6: i18n.t('common_saturday'),\n        0: i18n.t('common_sunday')\n    };\n    const year = String(newDate.getFullYear());\n    let month = String(newDate.getMonth() + 1);\n    if (month.length < 1) {\n        month = `0${month}`;\n    }\n    let day = String(newDate.getDate());\n    if (day.length === 1) {\n        day = `0${day}`;\n    }\n    let hours = String(newDate.getHours());\n    if (hours.length === 1) {\n        hours = `0${hours}`;\n    }\n    let minutes = String(newDate.getMinutes());\n    if (minutes.length === 1) {\n        minutes = `0${minutes}`;\n    }\n    let seconds = String(newDate.getSeconds());\n    if (seconds.length === 1) {\n        seconds = `0${seconds}`;\n    }\n    let result;\n    if (newDate.getFullYear() !== today.getFullYear()) {\n        if (time) {\n            result = 'yyyy-MM-dd hh:mm'\n                .replace(/yyyy/g, year)\n                .replace(/MM/g, month)\n                .replace(/dd/g, day)\n                .replace(/hh/g, hours)\n                .replace(/mm/g, minutes);\n        }\n        else {\n            result = 'yyyy-MM-dd'\n                .replace(/yyyy/g, year)\n                .replace(/MM/g, month)\n                .replace(/dd/g, day);\n        }\n    }\n    else {\n        const lastWeek = today.getTime() - 518400000;\n        if (date < lastWeek) {\n            if (time) {\n                result = 'MM-dd hh:mm'\n                    .replace(/MM/g, month)\n                    .replace(/dd/g, day)\n                    .replace(/hh/g, hours)\n                    .replace(/mm/g, minutes);\n            }\n            else {\n                result = 'MM-dd'.replace(/MM/g, month).replace(/dd/g, day);\n            }\n        }\n        else {\n            const beforeYesterday = today.getTime() - 86400000;\n            if (date < beforeYesterday) {\n                if (time) {\n                    result =\n                        dayList[newDate.getDay()] +\n                            ' ' +\n                            'hh:mm'.replace(/hh/g, hours).replace(/mm/g, minutes);\n                }\n                else {\n                    result = dayList[newDate.getDay()];\n                }\n            }\n            else {\n                if (date < today.getTime()) {\n                    if (time) {\n                        result =\n                            `${i18n.t('common_yesterday')} ` +\n                                'hh:mm'.replace(/hh/g, hours).replace(/mm/g, minutes);\n                    }\n                    else {\n                        result = i18n.t('common_yesterday');\n                    }\n                }\n                else {\n                    result = 'hh:mm'.replace(/hh/g, hours).replace(/mm/g, minutes);\n                }\n            }\n        }\n    }\n    return result;\n}\n","import { EventEmitter } from 'events';\nconst eventEmit = new EventEmitter();\nexport var EmitName;\n(function (EmitName) {\n    EmitName[\"ToastOperation\"] = \"toastOperation\";\n    EmitName[\"DialogOperation\"] = \"dialogOperation\";\n    EmitName[\"GroupInfoOperation\"] = \"groupInfoOperation\";\n})(EmitName || (EmitName = {}));\nexport const groupInfoOperation = (showGroupInfo) => {\n    eventEmit.emit(EmitName.GroupInfoOperation, showGroupInfo);\n};\nexport const toastOperation = (showToast, toastData) => {\n    eventEmit.emit(EmitName.ToastOperation, showToast, toastData);\n};\nexport const dialogOperation = (showBaseDialog, dialogData) => {\n    eventEmit.emit(EmitName.DialogOperation, showBaseDialog, dialogData);\n};\nexport default eventEmit;\n","import React from 'react';\nimport ZIMKitManager from '../../ZIMKitCommon/VM/ZIMKitManager';\nimport ZIMKitConversationVM from '../VM/ZIMKitConversation';\nimport ZIMKitGroupVM from '../../ZIMKitGroup/VM/ZIMKitGroupVM';\nimport CreateChatDialog from '../../ZIMKitCommon/UI/components/CreateChatDialog';\nimport RightClickDialog from '../../ZIMKitCommon/UI/components/RightClickDialog';\nimport './style.css';\nimport { dateFormat } from '../../ZIMKitCommon/ToolUtil/dateFormat';\nimport {\n  dialogOperation,\n  toastOperation\n} from '../../ZIMKitCommon/ToolUtil/eventBus';\nimport ZIMKiti18n from '../../../plugin/i18n';\nconst i18n = ZIMKiti18n.getInstance().getI18next();\n\nclass ConversationItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.switchConversation = this.switchConversation.bind(this);\n    this.operationConversation = this.operationConversation.bind(this);\n  }\n  switchConversation() {\n    const { conversation } = this.props;\n    ZIMKitConversationVM.getInstance().setCurrentConversation(\n      conversation.conversationID\n    );\n    ZIMKitConversationVM.getInstance().clearConversationUnreadMessageCount(\n      conversation.conversationID,\n      conversation.type\n    );\n  }\n  operationConversation(event) {\n    event.preventDefault();\n\n    const con = document.querySelector(\n      '.zego-im-container .box'\n    );\n    this.props.onRightClick({\n      showRightClickDialog: true,\n      x: event.clientX - con.offsetLeft,\n      y: event.clientY - con.offsetTop,\n      conversationItem: this.props.conversation\n    });\n  }\n  nameFormat(item) {\n    return (item.conversationName || item.conversationID)\n      .slice(0, 1)\n      .toLowerCase();\n  }\n  render() {\n    let unreadCountView = null;\n    const conversation = this.props.conversation;\n    const currentConversation = this.props.currentConversation;\n    if (conversation.unreadMessageCount) {\n      unreadCountView = (\n        <div className=\"unread-count\">\n          {conversation.unreadMessageCount > 99\n            ? '99+'\n            : conversation.unreadMessageCount}\n        </div>\n      );\n    }\n    return (\n      <div\n        className={\n          'conversation-item' +\n          (currentConversation &&\n          conversation.conversationID === currentConversation.conversationID\n            ? ' actived'\n            : '')\n        }\n        onClick={this.switchConversation}\n        onContextMenu={this.operationConversation}>\n        <div className=\"head-portrait\">\n          {conversation.type === 0 ? this.nameFormat(conversation) : 'G'}\n          {unreadCountView}\n        </div>\n        <div className=\"conversation-info\">\n          <div className=\"info-top\">\n            <div className=\"item-name\">\n              {conversation.conversationName || conversation.conversationID}\n            </div>\n            {conversation.lastMessage ? (\n              <div className=\"item-date\">\n                {dateFormat(conversation.lastMessage.timestamp, false)}\n              </div>\n            ) : null}\n          </div>\n          {conversation.lastMessage ? (\n            <div className=\"item-message\">\n              {conversation.lastMessage.sentStatus === 2 ? (\n                <div className=\"err-icon\"></div>\n              ) : null}\n              <div className=\"message-text\">\n                {conversation.lastMessage.message}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ConversationList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAbnormal: false,\n      totalUnreadMessageCount: 0,\n      conversationList: [],\n      showCreateChatDialog: false,\n      showRightClickDialog: false,\n      x: 0,\n      y: 0,\n      conversationItem: null, // Right click conversation\n      currentConversation: null\n    };\n    this.logout = this.logout.bind(this);\n    this.listScroll = this.listScroll.bind(this);\n    this.triggerDialog = this.triggerDialog.bind(this);\n    this.handleRightClick = this.handleRightClick.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    this.handleCreatePeerChat = this.handleCreatePeerChat.bind(this);\n    this.handleCreateGroupChat = this.handleCreateGroupChat.bind(this);\n    this.handleJoinGroup = this.handleJoinGroup.bind(this);\n    this.handleDeleteConversation = this.handleDeleteConversation.bind(this);\n    this.handleCloseConversation = this.handleCloseConversation.bind(this);\n  }\n  componentDidMount() {\n    if (ZIMKitManager.getInstance().isLoggedIn) {\n      ZIMKitConversationVM.getInstance().loadConversationList();\n    }\n    ZIMKitConversationVM.getInstance().registerIsLoggedInCallback(\n      () => {\n        ZIMKitConversationVM.getInstance().loadConversationList();\n      }\n    );\n    ZIMKitConversationVM.getInstance().registerCvTotalUnreadMessageCountUpdatedCallback(\n      data => {\n        this.setState({\n          totalUnreadMessageCount: data.totalUnreadMessageCount\n        });\n      }\n    );\n    ZIMKitConversationVM.getInstance().registerCvListUpdatedCallback(\n      conversationList => {\n        this.setState({ conversationList });\n      }\n    );\n    ZIMKitConversationVM.getInstance().registerCurrentCvUpdatedCallback(\n      currentConversation => {\n        this.setState({ currentConversation });\n      }\n    );\n    ZIMKitConversationVM.getInstance().registerAbnormalCallback(isAbnormal => {\n      this.setState({ isAbnormal });\n    });\n  }\n  componentWillUnmount() {\n    ZIMKitConversationVM.getInstance().unInit();\n  }\n  listScroll() {\n    const msgElement = document.querySelector(\n      '.conversation-content'\n    );\n    const scrollTop = Math.round(msgElement.scrollTop);\n    const scrollHeight = msgElement.scrollHeight;\n    const clientHeight = msgElement.clientHeight;\n    if (scrollTop >= scrollHeight - clientHeight) {\n      ZIMKitConversationVM.getInstance().loadNextPage();\n    }\n    if (scrollTop === 0) {\n      // todo reload\n    }\n  }\n  triggerDialog(show) {\n    this.setState({ showCreateChatDialog: show });\n  }\n  handleRightClick(data) {\n    this.setState(data);\n  }\n  handleCloseDialog() {\n    this.triggerDialog(false);\n  }\n  handleCreatePeerChat(toUserID) {\n    const conversationItem = this.state.conversationList.filter(\n      item => item.conversationID === toUserID\n    )[0];\n    if (conversationItem) {\n      ZIMKitConversationVM.getInstance().setCurrentConversation(\n        conversationItem.conversationID\n      );\n    } else {\n      ZIMKitConversationVM.getInstance().setTempConversation({\n        conversationID: toUserID,\n        conversationName: toUserID,\n        type: 0\n      });\n    }\n    this.triggerDialog(false);\n  }\n  handleCreateGroupChat(groupName, userIDList) {\n    const userIDListArr = userIDList.split(';').filter(userID => userID);\n    ZIMKitGroupVM.getInstance()\n      .createGroup('', groupName, userIDListArr)\n      .then((data) => {\n        const { groupInfo, errorUserList } = data;\n        const { baseInfo } = groupInfo;\n        if (errorUserList.length) {\n          const errorUserIDList = errorUserList\n            .map(item => item.userID)\n            .join(' ');\n          dialogOperation(true, {\n            desc: `${i18n\n              .t('message_user_not_exit_please_again')\n              .replace('%s', errorUserIDList)}`,\n            // desc: `${i18n.t(\"message_user_not_exit_please_again_w_1\")} ${errorUserIDList} ${i18n.t(\"message_user_not_exit_please_again_w_2\")}`,\n            cancelText: i18n.t('common_return'),\n            hasCloseBtn: false\n          });\n          return;\n        } else {\n          this.setState({ showCreateChatDialog: false });\n          ZIMKitConversationVM.getInstance().setTempConversation({\n            conversationID: baseInfo.groupID,\n            conversationName: baseInfo.groupName,\n            type: 2\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({ showCreateChatDialog: false });\n      });\n  }\n  handleJoinGroup(groupID) {\n    ZIMKitGroupVM.getInstance()\n      .joinGroup(groupID)\n      .then(data => {\n        const { groupInfo } = data;\n        const { baseInfo } = groupInfo;\n        this.setState({ showCreateChatDialog: false });\n        ZIMKitConversationVM.getInstance().setTempConversation({\n          conversationID: baseInfo.groupID,\n          conversationName: baseInfo.groupName,\n          type: 2\n        });\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case 6000523:\n            dialogOperation(true, {\n              desc: `${i18n\n                .t('group_group_id_not_exit')\n                .replace('%s', groupID)}`,\n              cancelText: i18n.t('common_return'),\n              hasCloseBtn: false\n            });\n            break;\n          default:\n            toastOperation(true, {\n              text: error.message,\n              type: 'default'\n            });\n            break;\n        }\n      });\n  }\n  handleDeleteConversation() {\n    // Delete conversation\n    const { conversationID, type } = this.state.conversationItem;\n    ZIMKitConversationVM.getInstance()\n      .deleteConversation(conversationID, type)\n      .then(() => {})\n      .finally(() => {\n        // Close right click dialog\n        this.setState({\n          showRightClickDialog: false\n        });\n      });\n  }\n  handleCloseConversation() {\n    this.setState({\n      showRightClickDialog: false\n    });\n  }\n  logout() {\n    ZIMKitManager.getInstance().logout();\n  }\n  render() {\n    let totalView = null,\n      createChatDialogView = null,\n      rightClickDialogView = null;\n    let conversationListView = null;\n    if (this.state.totalUnreadMessageCount) {\n      totalView = (\n        <div className=\"total\">\n          {this.state.totalUnreadMessageCount > 99\n            ? '99+'\n            : this.state.totalUnreadMessageCount}\n        </div>\n      );\n    }\n    if (this.state.showCreateChatDialog) {\n      createChatDialogView = (\n        <CreateChatDialog\n          onCloseDialog={this.handleCloseDialog}\n          onCreatePeerChat={this.handleCreatePeerChat}\n          onCreateGroupChat={this.handleCreateGroupChat}\n          onJoinGroup={this.handleJoinGroup}\n        />\n      );\n    }\n    if (this.state.showRightClickDialog) {\n      rightClickDialogView = (\n        <RightClickDialog\n          x={this.state.x}\n          y={this.state.y}\n          onDeleteConversation={this.handleDeleteConversation}\n          onCloseConversation={this.handleCloseConversation}\n        />\n      );\n    }\n    if (this.state.conversationList && this.state.conversationList.length) {\n      conversationListView = this.state.conversationList.map(\n        (element, index) => (\n          <ConversationItem\n            key={element.conversationID + index}\n            conversation={element}\n            currentConversation={this.state.currentConversation}\n            onRightClick={this.handleRightClick}\n          />\n        )\n      );\n    }\n    return (\n      <div className=\"conversation\">\n        <div className=\"left-banner\">\n          <div className=\"top\">\n            <div className=\"item\">\n              <div className=\"icon message-icon\"></div>\n              <div className=\"text\">\n                {i18n.t('conversation_message_total_count')}\n              </div>\n              {totalView}\n            </div>\n            <div className=\"item\" onClick={this.triggerDialog.bind(this, true)}>\n              <div className=\"icon create-chat-icon\"></div>\n              <div className=\"text create-chat-text\">\n                {i18n.t('conversation_start_chat_w')}\n              </div>\n            </div>\n          </div>\n          <div className=\"item\" onClick={this.logout}>\n            <div className=\"icon exit-icon\"></div>\n            <div className=\"text exit-text\">{i18n.t('common_logout')}</div>\n          </div>\n        </div>\n        {!this.state.isAbnormal ? (\n          this.state.conversationList.length ? (\n            <div className=\"conversation-content\" onScroll={this.listScroll}>\n              {conversationListView}\n            </div>\n          ) : (\n            <div className=\"default-content\">\n              <div className=\"text\">{i18n.t('conversation_empty')}</div>\n            </div>\n          )\n        ) : (\n          <div className=\"abnormal-content\">\n            <div\n              className=\"btn reload-btn\"\n              onClick={ZIMKitConversationVM.getInstance().loadConversationList.bind(\n                ZIMKitConversationVM.getInstance()\n              )}>\n              {i18n.t('conversation_reload')}\n            </div>\n          </div>\n        )}\n        {createChatDialogView}\n        {rightClickDialogView}\n      </div>\n    );\n  }\n}\n\nexport default ConversationList;\n","export default class ZIMKitMessageModel {\n    constructor(message) {\n        this.type = message.type;\n        this.messageID = message.messageID;\n        this.timestamp = message.timestamp;\n        this.message = message.message;\n        this.senderUserID = message.senderUserID;\n        this.conversationID = message.conversationID;\n        this.conversationType = message.conversationType;\n        this.direction = message.direction;\n        this.sentStatus = message.sentStatus;\n        this.orderKey = message.orderKey;\n        this.conversationSeq = message.conversationSeq;\n    }\n}\nexport var ZIMKitMessageType;\n(function (ZIMKitMessageType) {\n    ZIMKitMessageType[ZIMKitMessageType[\"Tip\"] = 99] = \"Tip\";\n})(ZIMKitMessageType || (ZIMKitMessageType = {}));\n","import { EventName } from '../../ZIMKitCommon/Constant/event';\nimport ZIMKitEventHandler from '../../ZIMKitCommon/VM/ZIMKitEventHandler';\nimport ZIMKitManager from '../../ZIMKitCommon/VM/ZIMKitManager';\nimport ZIMKitMessageModel from '../Model';\nimport ZIMKiti18n from '../../../plugin/i18n';\nconst i18n = ZIMKiti18n.getInstance().getI18next();\nexport default class ZIMKitMessageVM {\n    constructor() {\n        this.eventHandler = ZIMKitEventHandler.getInstance();\n        this.messageCount = 30;\n        this.messageIndex = 31;\n        this.currentChat = {};\n        this.currentMessageList = [];\n        if (!ZIMKitMessageVM.instance) {\n            ZIMKitMessageVM.instance = this;\n            ZIMKitMessageVM.instance.initListenerHandle();\n        }\n        return ZIMKitMessageVM.instance;\n    }\n    static getInstance() {\n        if (!ZIMKitMessageVM.instance) {\n            ZIMKitMessageVM.instance = new ZIMKitMessageVM();\n        }\n        return ZIMKitMessageVM.instance;\n    }\n    initListenerHandle() {\n        this.eventHandler.addEventListener(EventName.zimReceivePeerMessage, [\n            data => {\n                if (this.currentChat.conversationID === data.fromConversationID) {\n                    data.messageList.forEach(item => {\n                        this.currentMessageList.push(new ZIMKitMessageModel(item));\n                    });\n                    this.eventHandler.actionListener(EventName.zimKitCurrentMessageListUpdated, this.currentMessageList);\n                    this.eventHandler.actionListener(EventName.zimKitCurrentChatUpdated, this.currentChat);\n                }\n            }\n        ]);\n        this.eventHandler.addEventListener(EventName.zimReceiveGroupMessage, [\n            data => {\n                if (this.currentChat.conversationID === data.fromConversationID) {\n                    data.messageList.forEach(item => {\n                        this.currentMessageList.push(new ZIMKitMessageModel(item));\n                    });\n                    this.eventHandler.actionListener(EventName.zimKitCurrentMessageListUpdated, this.currentMessageList);\n                    this.eventHandler.actionListener(EventName.zimKitCurrentChatUpdated, this.currentChat);\n                }\n            }\n        ]);\n        this.eventHandler.addEventListener(EventName.zimKitDeleteConversation, [\n            conversationID => {\n                if (conversationID === this.currentChat.conversationID) {\n                    this.currentMessageList = [];\n                    this.currentChat = {};\n                    this.eventHandler.actionListener(EventName.zimKitCurrentMessageListUpdated, this.currentMessageList);\n                    this.eventHandler.actionListener(EventName.zimKitCurrentChatUpdated, this.currentChat);\n                }\n            }\n        ]);\n        this.eventHandler.addEventListener(EventName.zimKitCurrentConversationUpdate, [\n            conversation => {\n                if (!conversation ||\n                    (this.currentChat.conversationID &&\n                        conversation.conversationID === this.currentChat.conversationID))\n                    return;\n                this.currentChat = conversation;\n                this.messageCount = 30;\n                this.currentMessageList.length = 0;\n                console.time();\n                this.queryHistoryMessage(this.currentChat.conversationID, this.currentChat.type);\n                this.eventHandler.actionListener(EventName.zimKitCurrentChatUpdated, this.currentChat);\n            }\n        ]);\n    }\n    queryHistoryMessage(conversationID, conversationType) {\n        const config = {\n            nextMessage: undefined,\n            count: this.messageCount,\n            reverse: true\n        };\n        return ZIMKitManager.getInstance()\n            .zim.queryHistoryMessage(conversationID, conversationType, config)\n            .then(data => {\n            console.timeEnd();\n            this.currentMessageList = [];\n            if (data.messageList.length) {\n                data.messageList.forEach(item => {\n                    this.currentMessageList.push(new ZIMKitMessageModel(item));\n                });\n            }\n            this.eventHandler.actionListener(EventName.zimKitCurrentMessageListUpdated, this.currentMessageList);\n        });\n    }\n    clearCurrentMessageList() {\n        this.currentMessageList = [];\n        this.eventHandler.actionListener(EventName.zimKitCurrentMessageListUpdated, this.currentMessageList);\n    }\n    sendPeerMessage(message) {\n        const config = { priority: 1 };\n        return ZIMKitManager.getInstance()\n            .zim.sendPeerMessage(message, this.currentChat.conversationID, config)\n            .then(res => {\n            this.currentMessageList.push(new ZIMKitMessageModel(res.message));\n        })\n            .catch((error) => {\n            const msg = {\n                type: 1,\n                messageID: String(new Date().getTime()),\n                message: message.message,\n                timestamp: new Date().getTime(),\n                senderUserID: ZIMKitManager.getInstance().userInfo.userID,\n                conversationID: '',\n                conversationType: 0,\n                direction: 0,\n                sentStatus: 2,\n                orderKey: 0,\n                conversationSeq: 0\n            };\n            this.currentMessageList.push(new ZIMKitMessageModel(msg));\n            switch (error.code) {\n                case 6000204:\n                    const tipMsg = {\n                        type: 99,\n                        messageID: String(new Date().getTime()),\n                        message: `${i18n\n                            .t('message_user_not_exit_please_again')\n                            .replace('%s', this.currentChat.conversationID)}`,\n                        timestamp: new Date().getTime(),\n                        senderUserID: ZIMKitManager.getInstance().userInfo.userID,\n                        conversationID: '',\n                        conversationType: 0,\n                        direction: 0,\n                        sentStatus: 2,\n                        orderKey: 0,\n                        conversationSeq: 0\n                    };\n                    this.currentMessageList.push(new ZIMKitMessageModel(tipMsg));\n                    break;\n                default:\n                    break;\n            }\n        })\n            .finally(() => {\n            this.eventHandler.actionListener(EventName.zimKitCurrentChatUpdated, this.currentChat);\n            this.eventHandler.actionListener(EventName.zimKitCurrentMessageListUpdated, this.currentMessageList);\n        });\n    }\n    sendGroupMessage(message) {\n        const config = { priority: 1 };\n        return ZIMKitManager.getInstance()\n            .zim.sendGroupMessage(message, this.currentChat.conversationID, config)\n            .then(res => {\n            this.currentMessageList.push(new ZIMKitMessageModel(res.message));\n        })\n            .catch(() => {\n            const msg = {\n                type: 1,\n                messageID: String(new Date().getTime()),\n                message: message.message,\n                timestamp: new Date().getTime(),\n                senderUserID: ZIMKitManager.getInstance().userInfo.userID,\n                conversationID: '',\n                conversationType: 0,\n                direction: 0,\n                sentStatus: 2,\n                orderKey: 0,\n                conversationSeq: 0\n            };\n            this.currentMessageList.push(new ZIMKitMessageModel(msg));\n        })\n            .finally(() => {\n            this.eventHandler.actionListener(EventName.zimKitCurrentChatUpdated, this.currentChat);\n            this.eventHandler.actionListener(EventName.zimKitCurrentMessageListUpdated, this.currentMessageList);\n        });\n    }\n    unInit() {\n        this.currentChat = {};\n        this.currentMessageList.length = 0;\n    }\n    registerLoginUserUpdatedCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitLoginUserUpdate, [\n            callback\n        ]);\n    }\n    registerCurrentChatUpdatedCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitCurrentChatUpdated, [\n            callback\n        ]);\n    }\n    registerMessageListUpdatedCallback(callback) {\n        this.eventHandler.addEventListener(EventName.zimKitCurrentMessageListUpdated, [callback]);\n    }\n}\n","import React from \"react\";\nimport ZIMKitMessageVM from \"../VM/ZIMKitMessageVM\";\nimport { dateFormat } from \"../../ZIMKitCommon/ToolUtil/dateFormat\";\nimport ZIMKitGroupVM from \"../../ZIMKitGroup/VM/ZIMKitGroupVM\";\nimport \"../../ZIMKitCommon/UI/common.css\"\nimport \"./style.css\"\nimport { groupInfoOperation } from \"../../ZIMKitCommon/ToolUtil/eventBus\";\nimport ZIMKiti18n from '../../../plugin/i18n';\nimport ZIMKitManager from \"../../ZIMKitCommon/VM/ZIMKitManager\";\nconst i18n = ZIMKiti18n.getInstance().getI18next();\n\nclass MessageView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentChat: null,\n            currentMessageList: [],\n            message: \"\",\n            oldScrollHeight: 0,\n            newScrollHeight: 0,\n            userInfo: {}\n        }\n        this.listScroll = this.listScroll.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.dateFormat = this.dateFormat.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.getGroupUserName = this.getGroupUserName.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.triggerGroupInfo = this.triggerGroupInfo.bind(this);\n    }\n    componentDidMount() {\n        ZIMKitMessageVM.getInstance().registerLoginUserUpdatedCallback(userInfo => {\n            this.setState({ userInfo });\n        })\n        ZIMKitMessageVM.getInstance().registerCurrentChatUpdatedCallback(currentChat => {\n            this.setState({ currentChat, message: \"\" }, () => {\n                // Auto focus\n                const messageInput = document.querySelector('.text-area');\n                // @ts-ignore\n                messageInput && (messageInput.focus());\n            });\n        });\n        ZIMKitMessageVM.getInstance().registerMessageListUpdatedCallback(currentMessageList => {\n            this.setState({ currentMessageList }, () => {\n                this.scrollToBottom();\n            });\n        });\n    }\n    componentWillUnmount() {\n        ZIMKitMessageVM.getInstance().unInit();\n    }\n    scrollToBottom() {\n        const msgElement = document.querySelector(\".message-content\");\n        if (msgElement) {\n            const scrollTop = Number(msgElement.scrollHeight) - Number(msgElement.clientHeight);\n            msgElement.scrollTop = scrollTop;\n        }\n    }\n    listScroll() {\n        const msgElement = document.querySelector(\".message-content\");\n        if (msgElement) {\n            const scrollTop = Math.round(msgElement.scrollTop);\n            const scrollHeight = msgElement.scrollHeight;\n            const { currentMessageList, currentChat } = this.state;\n            if (scrollTop === 0) {\n                if (ZIMKitMessageVM.getInstance().messageCount <= currentMessageList.length) {\n                    ZIMKitMessageVM.getInstance().messageCount = currentMessageList.length + 30;\n                    ZIMKitMessageVM.getInstance().queryHistoryMessage(currentChat.conversationID, currentChat.type).then(() => {\n                        this.setState({\n                            oldScrollHeight: scrollHeight,\n                        }, () => {\n                            this.setState({\n                                newScrollHeight: msgElement.scrollHeight,\n                            }, () => {\n                                msgElement.scrollTop = this.state.newScrollHeight - this.state.oldScrollHeight;\n                            });\n                        });\n                    })\n                }\n            }\n        }\n    }\n    sendMessage() {\n        const messageObj = {\n            type: 1,\n            message: this.state.message,\n        };\n        if (this.state.currentChat.type === 2) {\n            ZIMKitMessageVM.getInstance().sendGroupMessage(messageObj);\n        } else {\n            ZIMKitMessageVM.getInstance().sendPeerMessage(messageObj);\n        }\n        this.setState({ message: \"\" });\n    }\n    getGroupUserName(userID) {\n        const memberList = ZIMKitGroupVM.getInstance().memberList;\n        let groupIDUserName = userID;\n        if (memberList.length) {\n            const member = memberList.filter((item) => item.userID === userID)[0];\n            groupIDUserName =  member ? member.userName : userID;\n        }\n        return groupIDUserName;\n    }\n    dateFormat(currentMessage, currentIndex) {\n        if (currentIndex === 0) {\n            return dateFormat(currentMessage.timestamp, true);\n        } else {\n            const previousMessage = this.state.currentMessageList[currentIndex - 1];\n            if (previousMessage && currentMessage.timestamp - previousMessage.timestamp > 300000) {\n                return dateFormat(currentMessage.timestamp, true);\n            }\n        }\n    }\n    handleInputChange(event) {\n        this.setState({\n            message: event.target.value\n        });\n    }\n    triggerGroupInfo() {\n        groupInfoOperation(true);\n    }\n    render() {\n        const { currentChat, currentMessageList } = this.state;\n        const { userID, userName } = ZIMKitManager.getInstance().userInfo;\n        let chatContentView = null;\n        if (!currentChat || !currentChat.conversationID) {\n            chatContentView = (<div className=\"default-content\">\n                <div className=\"img\"></div>\n                <div className=\"text\">{ i18n.t(\"message_empty_w\") }</div>\n            </div>);\n        } else {\n            const { conversationName, conversationID, type } = currentChat;\n            chatContentView = (\n                <React.Fragment>\n                    <div className=\"header\">\n                        <div className=\"title\">{ conversationName || conversationID }</div>\n                        { type === 2 ? <div className=\"more-icon\" onClick={ this.triggerGroupInfo }></div> : null }\n                    </div>\n                    <div className=\"message-content\" onScroll={ this.listScroll }>\n                        {\n                            currentMessageList.map((item, index) => {\n                                const time = this.dateFormat(item, index);\n                                const isReceive = item.conversationType === 2 ? item.senderUserID !== userID : item.senderUserID !== userID;\n                                const isError = item.type === 99;\n                                const groupUserName = this.getGroupUserName(item.senderUserID);\n                                return <div className=\"message-item\" key={ item.messageID + index }>\n                                    {\n                                        time ? <div className=\"time-box\">{ time }</div> : null\n                                    }\n                                    {\n                                        isReceive ? <div className=\"left-msg\">\n                                            <div className=\"head-portrait\">\n                                                { item.conversationType === 2 ? groupUserName.substr(0, 1).toLowerCase() : (conversationName ? conversationName.substr(0, 1).toLowerCase() : \"\") }\n                                            </div>\n                                            <div className=\"message-box\">\n                                                { item.conversationType === 2 ? <div className=\"send-name\">{ groupUserName }</div> : null }\n                                                <div className=\"msg-text\">{ item.message }</div>\n                                            </div>\n                                        </div> : null\n                                    }\n                                    {\n                                        isError ? <div className=\"center-msg\">{ item.message }</div> : null\n                                    }\n                                    {\n                                        !isReceive && !isError ? <div className=\"right-msg\">\n                                            { item.type !== 99 && item.sentStatus === 2 ? <div className=\"err-icon\"></div> : null }\n                                            <div className=\"message-box\">\n                                                {/* { item.conversationType === 2 ? <div className=\"send-name\">{ userName }</div> : null } */}\n                                                <div className=\"msg-text\">{ item.message }</div>\n                                            </div>\n                                            <div className=\"head-portrait\">{ userName.substr(0, 1).toLowerCase() }</div>\n                                        </div> : null\n                                    }\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"send-box\">\n                        <div className=\"tool-box\"></div>\n                        <textarea className=\"text-area\" value={this.state.message} onInput={ this.handleInputChange }></textarea>\n                        <button className=\"btn send-button\" onClick={ this.sendMessage } disabled={ !this.state.message }>{ i18n.t(\"message_send_w\") }</button>\n                    </div>\n                </React.Fragment>\n            );\n        }\n        return (<div className=\"chat\">{ chatContentView }</div>);\n    }\n}\n\nexport default MessageView;","import React from \"react\";\nimport { groupInfoOperation, toastOperation } from \"../../ZIMKitCommon/ToolUtil/eventBus\";\nimport ZIMKitGroupVM from \"../VM/ZIMKitGroupVM\";\nimport \"./style.css\";\nimport ZIMKiti18n from '../../../plugin/i18n';\nconst i18n = ZIMKiti18n.getInstance().getI18next();\n\nclass GroupInfoView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentGroupInfo: null\n        };\n        this.copy = this.copy.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(event) {\n        if (event.target.className.includes(\"more-icon\")) return;\n        let flag = false;\n        try {\n            event.path.forEach(path => {\n                if (path.className && path.className.includes(\"group-container\")) {\n                    flag = true;\n                    throw new Error(\"break\");\n                }\n            })\n        } catch (error) { }\n        if (!flag) {\n            groupInfoOperation(false);\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"click\", this.handleClick);\n        ZIMKitGroupVM.getInstance().registerCurrentGroupInfoUpdateCallback(currentGroupInfo => {\n            this.setState({ currentGroupInfo });\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"click\", this.handleClick)\n        ZIMKitGroupVM.getInstance().unInit();\n    }\n    copy() {\n        const currentGroupInfo = this.state.currentGroupInfo;\n        navigator.clipboard && currentGroupInfo && navigator.clipboard.writeText(currentGroupInfo.baseInfo.groupID).then(() => {\n            toastOperation(true, {\n                text: i18n.t(\"group_copy_success\"),\n                type: \"default\",\n            });\n        });\n    }\n    render() {\n        const currentGroupInfo = this.state.currentGroupInfo;\n        let groupInfoView = null;\n        if (this.props.showGroupInfo) {\n            // @ts-ignore\n            groupInfoView = <div className=\"group-container\">\n                <div className=\"form-box\">\n                    <div className=\"id\">\n                        <div className=\"label\">{ i18n.t(\"group_group_id\") }</div>\n                        <div className=\"value\">{ currentGroupInfo ? currentGroupInfo.baseInfo.groupID : \"\" }</div>\n                    </div>\n                    <div className=\"btn copy-btn\" onClick={ this.copy }>{ i18n.t(\"group_copy\") }</div>\n                </div>\n            </div>\n        }\n        return groupInfoView;\n    }\n}\n\nexport default GroupInfoView;","import React from 'react';\nimport './style.css';\nimport eventBus, { EmitName } from \"../../../ToolUtil/eventBus\";\n\nclass Toast extends React.Component {\n    toastTimer;\n    duration = 2000;\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    componentDidUpdate() {\n        if (this.props.showToast) {\n            clearTimeout(this.toastTimer);\n            this.toastTimer = setTimeout(() => {\n                eventBus.emit(EmitName.ToastOperation, false);\n            }, this.duration);\n        }\n    }\n    componentWillUnmount() {\n        clearTimeout(this.toastTimer);\n        this.toastTimer = null;\n    }\n    render() {\n        let toastView = null;\n        if (this.props.showToast) {\n            const { name, text, type } = this.props.toastData;\n            // @ts-ignore\n            toastView = <div>\n                <div className={ \"default\" + (type === \"loading\" ? \" loading\" : \"\") }>\n                    <div className={ \"toast\" + (type === \"error\" ? \" error\" : \"\" )}>\n                        { name ? <span className=\"name\">{ name }</span> : null}\n                        <span className=\"text\">{ text }</span>\n                    </div>\n                </div>\n            </div>\n        }\n        return toastView;\n    }\n}\n\nexport default Toast;","import React from 'react';\nimport './style.css';\nimport eventBus, { EmitName } from \"../../../ToolUtil/eventBus\";\n\nclass BaseDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.closeHandle = this.closeHandle.bind(this);\n        this.cancelHandle = this.cancelHandle.bind(this);\n        this.confirmHandle = this.confirmHandle.bind(this);\n    }\n    closeHandle() {\n        eventBus.emit(EmitName.DialogOperation, false);\n    }\n    cancelHandle() {\n        const { cancelFunc } = this.props.dialogData;\n        cancelFunc && cancelFunc();\n        this.closeHandle();\n    }\n    confirmHandle() {\n        const { confirmFunc } = this.props.dialogData;\n        confirmFunc && confirmFunc();\n        this.closeHandle();\n    }\n    render() {\n        let dialogView = null;\n        if (this.props.showBaseDialog) {\n            const { title, desc, hasCloseBtn, cancelText, confirmText } = this.props.dialogData;\n            dialogView = <div className=\"wrapper\">\n                <div className=\"dialog\">\n                    {\n                        hasCloseBtn ? <div className=\"close-icon\" onClick={ this.closeHandle }></div> : null\n                    }\n                    <div className=\"title\">{ title }</div>\n                    <div className=\"desc\">{ desc }</div>\n                    <div className=\"line\"></div>\n                    <div className=\"btn-box\">\n                        {\n                            cancelText ? <button className=\"btn cancel\" onClick={ this.cancelHandle }>{ cancelText }</button> : null\n                        }\n                        {\n                            confirmText ? <button className=\"btn confirm\" onClick={ this.confirmHandle }>{ confirmText }</button> : null\n                        }\n                    </div>\n                </div>\n            </div>\n        }\n        return dialogView;\n    }\n}\n\nexport default BaseDialog;","import React from \"react\";\nimport ConversationList from \"../../ZIMKitConversation/UI\";\nimport MessageView from \"../../ZIMKitMessage/UI\";\nimport GroupInfoView from \"../../ZIMKitGroup/UI\";\nimport Toast from \"./components/Toast\";\nimport BaseDialog from \"./components/BaseDialog\";\nimport eventBus, { EmitName } from \"../ToolUtil/eventBus\";\nimport './style.css';\n\nclass Common extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGroupInfo: false,\n            showToast: false,\n            showBaseDialog: false,\n            toastData: {\n                text: \"\",\n                name: \"\",\n                type: \"default\"\n            },\n            dialogData: {\n                title: \"\",\n                desc: \"\",\n                cancelText: \"\",\n                confirmText: \"\",\n                hasCloseBtn: false\n            }\n        };\n        this.handleGroupInfoOperation = this.handleGroupInfoOperation.bind(this);\n        this.handleToastOperation = this.handleToastOperation.bind(this);\n        this.handleDialogOperation = this.handleDialogOperation.bind(this);\n    }\n    handleGroupInfoOperation(showGroupInfo) {\n        this.setState({ \n            showGroupInfo: showGroupInfo === undefined ? !this.state.showGroupInfo : !!showGroupInfo\n        });\n    }\n    handleToastOperation(showToast, toastData) {\n        this.setState({ showToast, toastData });\n    }\n    handleDialogOperation(showBaseDialog, dialogData) {\n        this.setState({ showBaseDialog, dialogData });\n    }\n    componentDidMount() {\n        eventBus.on(EmitName.GroupInfoOperation, this.handleGroupInfoOperation);\n        eventBus.on(EmitName.ToastOperation, this.handleToastOperation);\n        eventBus.on(EmitName.DialogOperation, this.handleDialogOperation);\n    }\n    componentWillUnmount() {\n        eventBus.off(EmitName.GroupInfoOperation, this.handleGroupInfoOperation);\n        eventBus.off(EmitName.ToastOperation, this.handleToastOperation);\n        eventBus.off(EmitName.DialogOperation, this.handleDialogOperation);\n    }\n    render() {\n        const { showGroupInfo, showToast, showBaseDialog, toastData, dialogData } = this.state;\n        return (<div id=\"zegoim\">\n            <div className=\"zego-im-container\">\n                <div className=\"top-banner\">ZEGO IM</div>\n                <div className=\"box\">\n                    <ConversationList></ConversationList>\n                    <MessageView></MessageView>\n                    <GroupInfoView showGroupInfo={ showGroupInfo }></GroupInfoView>\n                </div>\n                <Toast showToast={ showToast } toastData={ toastData }></Toast>\n                <BaseDialog showBaseDialog={ showBaseDialog } dialogData={ dialogData }></BaseDialog>\n            </div>\n        </div>)\n    }\n}\n\nexport default Common;\n","import React from 'react';\nimport Common  from \"../../ZIMKit/src/components/ZIMKitCommon/UI\";\nimport { connect } from \"react-redux\";\nimport { logout, selectIsLoggedIn } from \"../../store/authSlice\";\nimport { Navigate } from 'react-router-dom';\nimport ZIMKitManager from '../../ZIMKit/src/components/ZIMKitCommon/VM/ZIMKitManager';\nimport { clearCacheUserInfo } from '../../util';\n\nclass MainPage extends React.Component {\n    componentDidMount(){\n        ZIMKitManager.getInstance().registerConnectionStateChangedCallback(data => {\n            if (data.state === 0 && (data.event === 0 || data.event === 4)) {\n                this.props.logout();\n                clearCacheUserInfo();\n            }\n        });\n    }\n    render() {\n        return (<div id=\"main\">\n            {\n                !this.props.isLoggedIn && (<Navigate to='/login' replace={ true } />)\n            }\n            <Common></Common> \n        </div>);\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: content => dispatch(logout(content))\n    };\n};\n  \nexport default connect(selectIsLoggedIn, mapDispatchToProps)(MainPage);","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LoginPage from \"../Login/index\";\nimport MainPage from \"../Main/index\";\nimport { initIMKitSDK, login, selectIsLoggedIn } from \"../../store/authSlice\";\nimport appConfig from \"../../config\";\nimport ZIMKitManager from \"../../ZIMKit/src/components/ZIMKitCommon/VM/ZIMKitManager\";\nimport { getCacheUserInfo } from '../../util/index';\nimport { generateToken } from '../../util/token';\nclass App extends React.Component {\n    cacheUserInfo = getCacheUserInfo()\n    async componentDidMount() {\n        // Init IMKitSDK\n        const zimKit = new ZIMKitManager();\n        await zimKit.createZIM(appConfig);\n        this.props.initIMKitSDK(true);\n        if (this.cacheUserInfo) {\n            // Auto login\n            const token = generateToken(this.cacheUserInfo.userID, 0, appConfig);\n            await ZIMKitManager.getInstance().loginWithUserInfo(this.cacheUserInfo,token);\n            this.props.login();\n        }\n    }\n    render() {\n        return (\n            <Routes>\n                <Route path=\"/\" element={ <MainPage /> } />\n                <Route path=\"/main\" element={ <MainPage /> } />\n                <Route path=\"/login\" element={ <LoginPage /> } />\n            </Routes>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initIMKitSDK: content => dispatch(initIMKitSDK(content)),\n        login: content => dispatch(login(content))\n    };\n};\n\nexport default connect(selectIsLoggedIn, mapDispatchToProps)(App);\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport  { store }  from \"./store\";\nimport './index.css';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root')\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export var ZIMPlatform;\n(function (ZIMPlatform) {\n    ZIMPlatform[ZIMPlatform[\"Web\"] = 0] = \"Web\";\n})(ZIMPlatform || (ZIMPlatform = {}));\nexport { ZIM, ZIMMessageType, ZIMMessageDirection, ZIMMessageSentStatus, ZIMConversationNotificationStatus, ZIMConversationType, ZIMConnectionState } from 'zego-zim-web';\n"],"sourceRoot":""}