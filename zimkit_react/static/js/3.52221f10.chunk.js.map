{"version":3,"sources":["ZIMKit/src/components/ZIMAdapter/base.js","ZIMKit/src/components/ZIMAdapter/web.js"],"names":["ZIMBase","Object","classCallCheck","this","ZIMWeb","_ZIMBase","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","type","listener","instance","on","off","userInfo","token","login","logout","destroy","renewToken","config","queryConversationList","groupInfo","userIDs","createGroup","message","toUserID","sendPeerMessage","toGroupID","sendGroupMessage","conversationID","conversationType","queryHistoryMessage","deleteConversation","clearConversationUnreadMessageCount","groupID","queryGroupInfo","queryGroupMemberList","joinGroup","leaveGroup","appID","ZIM","create"],"mappings":"gJAAaA,EAAb,SAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,yCCEO,IAAMI,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAH,OAAAC,EAAA,EAAAD,CAAAE,KAAAC,GAAAH,OAAAK,EAAA,EAAAL,CAAAE,KAAAF,OAAAM,EAAA,EAAAN,CAAAG,GAAAI,MAAAL,KAAAM,YAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAG,EAAAC,GAAAJ,OAAAU,EAAA,EAAAV,CAAAG,EAAA,EAAAQ,IAAA,KAAAC,MAAA,SAUOC,EAAMC,GACL,OAAOX,EAAOY,SAASC,GAAGH,EAAMC,KAXxC,CAAAH,IAAA,MAAAC,MAAA,SAaQC,GACA,OAAOV,EAAOY,SAASE,IAAIJ,KAdnC,CAAAF,IAAA,QAAAC,MAAA,SAgBUM,EAAUC,GACZ,OAAOhB,EAAOY,SAASK,MAAMF,EAAUC,KAjB/C,CAAAR,IAAA,SAAAC,MAAA,WAoBQ,OAAOT,EAAOY,SAASM,WApB/B,CAAAV,IAAA,UAAAC,MAAA,WAuBQ,OAAOT,EAAOY,SAASO,YAvB/B,CAAAX,IAAA,aAAAC,MAAA,SAyBeO,GACP,OAAOhB,EAAOY,SAASQ,WAAWJ,KA1B1C,CAAAR,IAAA,wBAAAC,MAAA,SA4B0BY,GAClB,OAAOrB,EAAOY,SAASU,sBAAsBD,KA7BrD,CAAAb,IAAA,cAAAC,MAAA,SA+BgBc,EAAWC,EAASH,GAC5B,OAAOrB,EAAOY,SAASa,YAAYF,EAAWC,EAASH,KAhC/D,CAAAb,IAAA,kBAAAC,MAAA,SAkCoBiB,EAASC,EAAUN,GAC/B,OAAOrB,EAAOY,SAASgB,gBAAgBF,EAASC,EAAUN,KAnClE,CAAAb,IAAA,mBAAAC,MAAA,SAqCqBiB,EAASG,EAAWR,GACjC,OAAOrB,EAAOY,SAASkB,iBAAiBJ,EAASG,EAAWR,KAtCpE,CAAAb,IAAA,sBAAAC,MAAA,SAwCwBsB,EAAgBC,EAAkBX,GAClD,OAAOrB,EAAOY,SAASqB,oBAAoBF,EAAgBC,EAAkBX,KAzCrF,CAAAb,IAAA,qBAAAC,MAAA,SA2CuBsB,EAAgBC,EAAkBX,GACjD,OAAOrB,EAAOY,SAASsB,mBAAmBH,EAAgBC,EAAkBX,KA5CpF,CAAAb,IAAA,sCAAAC,MAAA,SA8CwCsB,EAAgBC,GAChD,OAAOhC,EAAOY,SAASuB,oCAAoCJ,EAAgBC,KA/CnF,CAAAxB,IAAA,iBAAAC,MAAA,SAiDmB2B,GACX,OAAOpC,EAAOY,SAASyB,eAAeD,KAlD9C,CAAA5B,IAAA,uBAAAC,MAAA,SAoDyB2B,EAASf,GAC1B,OAAOrB,EAAOY,SAAS0B,qBAAqBF,EAASf,KArD7D,CAAAb,IAAA,YAAAC,MAAA,SAuDc2B,GACN,OAAOpC,EAAOY,SAAS2B,UAAUH,KAxDzC,CAAA5B,IAAA,aAAAC,MAAA,SA0De2B,GACP,OAAOpC,EAAOY,SAAS4B,WAAWJ,MA3D1C,EAAA5B,IAAA,SAAAC,MAAA,SACkBgC,GAIV,OAHKzC,EAAOY,WACRZ,EAAOY,SAAW8B,IAAIC,OAAOF,IAE1BzC,EAAOY,WALtB,CAAAJ,IAAA,cAAAC,MAAA,WAQQ,OAAOT,EAAOY,aARtBZ,EAAA,CAA4BJ","file":"static/js/3.52221f10.chunk.js","sourcesContent":["export class ZIMBase {\n}\n","import { ZIM } from './index.entity';\nimport { ZIMBase } from './base';\nexport class ZIMWeb extends ZIMBase {\n    static create(appID) {\n        if (!ZIMWeb.instance) {\n            ZIMWeb.instance = ZIM.create(appID);\n        }\n        return ZIMWeb.instance;\n    }\n    static getInstance() {\n        return ZIMWeb.instance;\n    }\n    on(type, listener) {\n        return ZIMWeb.instance.on(type, listener);\n    }\n    off(type) {\n        return ZIMWeb.instance.off(type);\n    }\n    login(userInfo, token) {\n        return ZIMWeb.instance.login(userInfo, token);\n    }\n    logout() {\n        return ZIMWeb.instance.logout();\n    }\n    destroy() {\n        return ZIMWeb.instance.destroy();\n    }\n    renewToken(token) {\n        return ZIMWeb.instance.renewToken(token);\n    }\n    queryConversationList(config) {\n        return ZIMWeb.instance.queryConversationList(config);\n    }\n    createGroup(groupInfo, userIDs, config) {\n        return ZIMWeb.instance.createGroup(groupInfo, userIDs, config);\n    }\n    sendPeerMessage(message, toUserID, config) {\n        return ZIMWeb.instance.sendPeerMessage(message, toUserID, config);\n    }\n    sendGroupMessage(message, toGroupID, config) {\n        return ZIMWeb.instance.sendGroupMessage(message, toGroupID, config);\n    }\n    queryHistoryMessage(conversationID, conversationType, config) {\n        return ZIMWeb.instance.queryHistoryMessage(conversationID, conversationType, config);\n    }\n    deleteConversation(conversationID, conversationType, config) {\n        return ZIMWeb.instance.deleteConversation(conversationID, conversationType, config);\n    }\n    clearConversationUnreadMessageCount(conversationID, conversationType) {\n        return ZIMWeb.instance.clearConversationUnreadMessageCount(conversationID, conversationType);\n    }\n    queryGroupInfo(groupID) {\n        return ZIMWeb.instance.queryGroupInfo(groupID);\n    }\n    queryGroupMemberList(groupID, config) {\n        return ZIMWeb.instance.queryGroupMemberList(groupID, config);\n    }\n    joinGroup(groupID) {\n        return ZIMWeb.instance.joinGroup(groupID);\n    }\n    leaveGroup(groupID) {\n        return ZIMWeb.instance.leaveGroup(groupID);\n    }\n}\n"],"sourceRoot":""}